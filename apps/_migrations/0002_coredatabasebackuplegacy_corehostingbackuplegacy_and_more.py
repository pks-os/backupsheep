# Generated by Django 5.0.6 on 2024-07-10 07:01

import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('apps', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
        ('django_celery_beat', '0018_improve_crontab_helptext'),
    ]

    operations = [
        migrations.CreateModel(
            name='CoreDatabaseBackupLegacy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('storage_id', models.IntegerField(null=True)),
            ],
            options={
                'db_table': 'core_database_backup',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CoreHostingBackupLegacy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('storage_id', models.IntegerField(null=True)),
            ],
            options={
                'db_table': 'core_hosting_backup',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CoreAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.IntegerField(choices=[(1, 'Active'), (0, 'Disabled'), (2, 'Delete Requested')], default=1)),
                ('notify_on_success', models.BooleanField(default=True, null=True)),
                ('notify_on_fail', models.BooleanField(default=True, null=True)),
                ('encryption_key', models.BinaryField(null=True)),
                ('stats_storage_used_bs', models.BigIntegerField(default=0)),
                ('stats_storage_used_byo', models.BigIntegerField(default=0)),
                ('stats_nodes_used', models.BigIntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Account',
                'verbose_name_plural': 'Accounts',
                'db_table': 'core_account',
            },
        ),
        migrations.CreateModel(
            name='CoreAlibabaRegion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=64, unique=True)),
                ('name', models.CharField(max_length=64)),
                ('endpoint', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'core_alibab_region',
            },
        ),
        migrations.CreateModel(
            name='CoreAWSBackupStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('code', models.CharField(max_length=64, unique=True)),
                ('name', models.CharField(max_length=64)),
                ('description', models.TextField(null=True)),
            ],
            options={
                'db_table': 'core_aws_backup_status',
            },
        ),
        migrations.CreateModel(
            name='CoreAWSRDSBackupStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('code', models.CharField(max_length=64, unique=True)),
                ('name', models.CharField(max_length=64)),
                ('description', models.TextField(null=True)),
            ],
            options={
                'db_table': 'core_aws_rds_backup_status',
            },
        ),
        migrations.CreateModel(
            name='CoreAWSRegion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=64, unique=True)),
                ('name', models.CharField(max_length=64)),
                ('endpoint', models.CharField(max_length=255)),
                ('rds_endpoint', models.CharField(max_length=255, null=True)),
                ('s3_endpoint', models.CharField(max_length=255, null=True)),
            ],
            options={
                'db_table': 'core_aws_region',
            },
        ),
        migrations.CreateModel(
            name='CoreBackupType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('code', models.CharField(max_length=64, unique=True)),
                ('name', models.CharField(max_length=64)),
                ('description', models.TextField(null=True)),
            ],
            options={
                'db_table': 'core_backup_type',
            },
        ),
        migrations.CreateModel(
            name='CoreConnectionLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, null=True)),
                ('code', models.CharField(max_length=64, unique=True)),
                ('ip_address', models.GenericIPAddressField(null=True)),
                ('ip_address_v6', models.GenericIPAddressField(null=True)),
                ('location', models.CharField(max_length=64, null=True)),
                ('image_url', models.TextField(null=True)),
                ('api_endpoint', models.CharField(max_length=255, null=True)),
                ('api_url', models.URLField(null=True)),
                ('queue', models.CharField(max_length=64, null=True)),
                ('position', models.IntegerField(null=True)),
                ('task_list', models.JSONField(null=True)),
            ],
            options={
                'verbose_name': 'Location',
                'verbose_name_plural': 'Locations',
                'db_table': 'core_connection_location',
                'ordering': ['position'],
            },
        ),
        migrations.CreateModel(
            name='CoreConnectionStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=64, unique=True)),
                ('private', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=64)),
                ('description', models.TextField(null=True)),
            ],
            options={
                'db_table': 'core_connection_status',
            },
        ),
        migrations.CreateModel(
            name='CoreDatabaseBackupStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('code', models.CharField(max_length=64, unique=True)),
                ('name', models.CharField(max_length=64)),
                ('description', models.TextField(null=True)),
            ],
            options={
                'db_table': 'core_database_backup_status',
            },
        ),
        migrations.CreateModel(
            name='CoreDOBackupStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('code', models.CharField(max_length=64, unique=True)),
                ('name', models.CharField(max_length=64)),
                ('description', models.TextField(null=True)),
            ],
            options={
                'db_table': 'core_do_backup_status',
            },
        ),
        migrations.CreateModel(
            name='CoreDoSpacesRegion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=64, unique=True)),
                ('name', models.CharField(max_length=64)),
                ('endpoint', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'core_do_spaces_region',
            },
        ),
        migrations.CreateModel(
            name='CoreDownload',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('path', models.TextField()),
                ('count', models.BigIntegerField(default=0)),
                ('key', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'core_download',
            },
        ),
        migrations.CreateModel(
            name='CoreExoscaleRegion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=64, unique=True)),
                ('name', models.CharField(max_length=64)),
                ('endpoint', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'core_exoscale_region',
            },
        ),
        migrations.CreateModel(
            name='CoreFilebaseRegion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=64, unique=True)),
                ('name', models.CharField(max_length=64)),
                ('endpoint', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'core_filebase_region',
            },
        ),
        migrations.CreateModel(
            name='CoreIBMRegion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=64, unique=True)),
                ('name', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'core_ibm_region',
            },
        ),
        migrations.CreateModel(
            name='CoreIntegration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, null=True)),
                ('code', models.CharField(max_length=64, unique=True)),
                ('public_key', models.TextField(null=True)),
                ('description', models.TextField(null=True)),
                ('position', models.IntegerField(null=True)),
                ('url', models.URLField(null=True)),
                ('image', models.CharField(max_length=2048, null=True)),
                ('enabled', models.BooleanField(default=True)),
                ('type', models.CharField(choices=[('cloud', 'Cloud'), ('saas', 'SaaS'), ('website', 'Website'), ('database', 'Database')], default='cloud', max_length=64)),
            ],
            options={
                'db_table': 'core_integration',
            },
        ),
        migrations.CreateModel(
            name='CoreIonosRegion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=64, unique=True)),
                ('name', models.CharField(max_length=64)),
                ('endpoint', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'core_ionos_region',
            },
        ),
        migrations.CreateModel(
            name='CoreLightsailBackupStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('code', models.CharField(max_length=64, unique=True)),
                ('name', models.CharField(max_length=64)),
                ('description', models.TextField(null=True)),
            ],
            options={
                'db_table': 'core_lightsail_backup_status',
            },
        ),
        migrations.CreateModel(
            name='CoreLightsailRegion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=64, unique=True)),
                ('name', models.CharField(max_length=64)),
                ('endpoint', models.CharField(max_length=255)),
                ('rds_endpoint', models.CharField(max_length=255, null=True)),
            ],
            options={
                'db_table': 'core_lightsail_region',
            },
        ),
        migrations.CreateModel(
            name='CoreLinodeBackupStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('code', models.CharField(max_length=64, unique=True)),
                ('name', models.CharField(max_length=64)),
                ('description', models.TextField(null=True)),
            ],
            options={
                'db_table': 'core_linode_backup_status',
            },
        ),
        migrations.CreateModel(
            name='CoreOracleRegion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=64, unique=True)),
                ('name', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'core_oracle_region',
            },
        ),
        migrations.CreateModel(
            name='CoreOVHCABackupStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('code', models.CharField(max_length=64, unique=True)),
                ('name', models.CharField(max_length=64)),
                ('description', models.TextField(null=True)),
            ],
            options={
                'db_table': 'core_ovh_ca_backup_status',
            },
        ),
        migrations.CreateModel(
            name='CoreOVHEUBackupStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('code', models.CharField(max_length=64, unique=True)),
                ('name', models.CharField(max_length=64)),
                ('description', models.TextField(null=True)),
            ],
            options={
                'db_table': 'core_ovh_eu_backup_status',
            },
        ),
        migrations.CreateModel(
            name='CoreRackCorpRegion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=64, unique=True)),
                ('name', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'core_rackcorp_region',
            },
        ),
        migrations.CreateModel(
            name='CoreScalewayRegion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=64, unique=True)),
                ('name', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'core_scaleway_region',
            },
        ),
        migrations.CreateModel(
            name='CoreServerStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('code', models.CharField(max_length=64, unique=True)),
                ('name', models.CharField(max_length=64)),
                ('description', models.TextField(null=True)),
            ],
            options={
                'db_table': 'core_server_status',
            },
        ),
        migrations.CreateModel(
            name='CoreServerType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('code', models.CharField(max_length=64, unique=True)),
                ('name', models.CharField(max_length=64)),
                ('description', models.TextField(null=True)),
            ],
            options={
                'db_table': 'core_server_type',
            },
        ),
        migrations.CreateModel(
            name='CoreTencentRegion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=64, unique=True)),
                ('name', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'core_tencent_region',
            },
        ),
        migrations.CreateModel(
            name='CoreVultrBackupStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('code', models.CharField(max_length=64, unique=True)),
                ('name', models.CharField(max_length=64)),
                ('description', models.TextField(null=True)),
            ],
            options={
                'db_table': 'core_vultr_backup_status',
            },
        ),
        migrations.CreateModel(
            name='CoreWasabiRegion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=64, unique=True)),
                ('name', models.CharField(max_length=64)),
                ('endpoint', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'core_wasabi_region',
            },
        ),
        migrations.CreateModel(
            name='CoreWebsiteBackupStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('code', models.CharField(max_length=64, unique=True)),
                ('name', models.CharField(max_length=64)),
                ('description', models.TextField(null=True)),
            ],
            options={
                'db_table': 'core_website_backup_status',
            },
        ),
        migrations.CreateModel(
            name='UtilCountry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=2, null=True)),
                ('name', models.CharField(max_length=45, null=True)),
                ('iso_alpha3', models.CharField(max_length=3, null=True)),
                ('priority', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'util_country',
            },
        ),
        migrations.CreateModel(
            name='UtilDeleteFiles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.TextField()),
                ('server', models.CharField(max_length=32, null=True)),
                ('created', models.BigIntegerField()),
            ],
            options={
                'db_table': 'util_delete_files',
            },
        ),
        migrations.CreateModel(
            name='UtilMariaDBOptions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('type', models.IntegerField(choices=[(1, 'Flag'), (2, 'Value')], null=True)),
            ],
            options={
                'db_table': 'util_mariadb_options',
            },
        ),
        migrations.CreateModel(
            name='UtilMySQLOptions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('type', models.IntegerField(choices=[(1, 'Flag'), (2, 'Value')], null=True)),
            ],
            options={
                'db_table': 'util_mysql_options',
            },
        ),
        migrations.CreateModel(
            name='UtilPostgreSQLOptions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('type', models.IntegerField(choices=[(1, 'Flag'), (2, 'Value'), (3, 'Pattern')], null=True)),
            ],
            options={
                'db_table': 'util_postgresql_options',
            },
        ),
        migrations.CreateModel(
            name='UtilSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('running_storage_billing', models.BooleanField(null=True)),
                ('running_storage_calculation', models.BooleanField(null=True)),
                ('total_backups', models.BigIntegerField(null=True)),
            ],
            options={
                'db_table': 'util_setting',
            },
        ),
        migrations.AlterField(
            model_name='coremember',
            name='timezone',
            field=models.CharField(default='UTC', max_length=64),
        ),
        migrations.CreateModel(
            name='CoreAccountGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('name', models.CharField(max_length=255)),
                ('type', models.IntegerField(choices=[(1, 'Team'), (2, 'Client')])),
                ('default', models.BooleanField(editable=False)),
                ('notes', models.TextField(null=True)),
                ('account', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='apps.coreaccount')),
                ('group', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='enrollment', to='auth.group')),
            ],
            options={
                'verbose_name': 'Account Group',
                'verbose_name_plural': 'Account Groups',
                'db_table': 'core_account_mtm_group',
                'permissions': [('notify_on_success', 'Can receive success notifications'), ('notify_on_fail', 'Can receive fail notifications'), ('notify_via_email', 'Can receive email notifications'), ('notify_via_slack', 'Can receive slack notifications'), ('notify_via_telegram', 'Can receive telegram notifications'), ('backup_create', 'Can create on-demand backup of node.'), ('backup_download', 'Can download any on-demand/scheduled backup of node.'), ('backup_delete', 'Can delete any on-demand/scheduled backup of node.'), ('schedule_changes', 'Can create, modify and delete backup schedules.'), ('node_changes', 'Can create, modify and delete nodes.'), ('integration_changes', 'Can create, modify and delete integrations.'), ('storage_changes', 'Can create, modify and delete storage accounts.')],
            },
        ),
        migrations.AddField(
            model_name='coreaccount',
            name='groups',
            field=models.ManyToManyField(related_name='accounts', through='apps.CoreAccountGroup', to='auth.group'),
        ),
        migrations.CreateModel(
            name='CoreConnection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('status', models.IntegerField(choices=[(1, 'Active'), (2, 'Pending'), (3, 'Suspended'), (4, 'Paused'), (5, 'Delete Requested'), (6, 'Token Refresh Failed')], default=1)),
                ('notification', models.IntegerField(choices=[(1, 'Not Sent'), (2, 'Sent')], default=1)),
                ('name', models.CharField(max_length=255)),
                ('notes', models.TextField(blank=True, null=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='connections', to='apps.coreaccount')),
                ('added_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='added_connections', to='apps.coremember')),
                ('location', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='connections', to='apps.coreconnectionlocation')),
                ('old_status', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='connections', to='apps.coreconnectionstatus')),
                ('integration', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='connections', to='apps.coreintegration')),
            ],
            options={
                'db_table': 'core_connection',
            },
        ),
        migrations.CreateModel(
            name='CoreAuthWordPress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('url', models.URLField()),
                ('key', models.CharField(max_length=255)),
                ('http_user', models.CharField(blank=True, max_length=255, null=True)),
                ('http_pass', models.CharField(blank=True, max_length=255, null=True)),
                ('connection', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='auth_wordpress', to='apps.coreconnection')),
            ],
            options={
                'db_table': 'core_auth_wordpress',
            },
        ),
        migrations.CreateModel(
            name='CoreAuthWebsite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('host', models.CharField(max_length=255)),
                ('port', models.IntegerField()),
                ('use_private_key', models.BooleanField(null=True)),
                ('private_key', models.BinaryField(null=True)),
                ('username', models.BinaryField(null=True)),
                ('password', models.BinaryField(null=True)),
                ('protocol', models.IntegerField(choices=[(1, 'FTP'), (2, 'SFTP'), (3, 'FTPS')], null=True)),
                ('info_name', models.CharField(max_length=64, null=True)),
                ('use_public_key', models.BooleanField(null=True)),
                ('ftps_use_explicit_ssl', models.BooleanField(null=True)),
                ('encryption_updated', models.BooleanField(default=False)),
                ('flag_use_sha1_key_verification', models.BooleanField(default=False, null=True)),
                ('connection', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='auth_website', to='apps.coreconnection')),
            ],
            options={
                'db_table': 'core_auth_website',
            },
        ),
        migrations.CreateModel(
            name='CoreAuthVultr',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('api_key', models.BinaryField(null=True)),
                ('info_name', models.CharField(max_length=64, null=True)),
                ('info_email', models.CharField(max_length=64, null=True)),
                ('encryption_updated', models.BooleanField(default=False)),
                ('connection', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='auth_vultr', to='apps.coreconnection')),
            ],
            options={
                'db_table': 'core_auth_vultr',
            },
        ),
        migrations.CreateModel(
            name='CoreAuthUpCloud',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('username', models.BinaryField(null=True)),
                ('password', models.BinaryField(null=True)),
                ('token_refresh_failed', models.BooleanField(default=False)),
                ('encryption_updated', models.BooleanField(default=False)),
                ('connection', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='auth_upcloud', to='apps.coreconnection')),
            ],
            options={
                'db_table': 'core_auth_upcloud',
            },
        ),
        migrations.CreateModel(
            name='CoreAuthOVHUS',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('consumer_key', models.BinaryField(null=True)),
                ('info_customer_code', models.CharField(max_length=1024, null=True)),
                ('info_name', models.CharField(max_length=1024, null=True)),
                ('info_email', models.CharField(max_length=255, null=True)),
                ('info_organization', models.CharField(max_length=1024, null=True)),
                ('encryption_updated', models.BooleanField(default=False)),
                ('connection', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='auth_ovh_us', to='apps.coreconnection')),
            ],
            options={
                'db_table': 'core_auth_ovh_us',
            },
        ),
        migrations.CreateModel(
            name='CoreAuthOVHEU',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('consumer_key', models.BinaryField(null=True)),
                ('info_customer_code', models.CharField(max_length=1024, null=True)),
                ('info_name', models.CharField(max_length=1024, null=True)),
                ('info_email', models.CharField(max_length=255, null=True)),
                ('info_organization', models.CharField(max_length=1024, null=True)),
                ('encryption_updated', models.BooleanField(default=False)),
                ('connection', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='auth_ovh_eu', to='apps.coreconnection')),
            ],
            options={
                'db_table': 'core_auth_ovh_eu',
            },
        ),
        migrations.CreateModel(
            name='CoreAuthOVHCA',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('consumer_key', models.BinaryField(null=True)),
                ('info_customer_code', models.CharField(max_length=1024, null=True)),
                ('info_name', models.CharField(max_length=1024, null=True)),
                ('info_email', models.CharField(max_length=255, null=True)),
                ('info_organization', models.CharField(max_length=1024, null=True)),
                ('encryption_updated', models.BooleanField(default=False)),
                ('connection', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='auth_ovh_ca', to='apps.coreconnection')),
            ],
            options={
                'db_table': 'core_auth_ovh_ca',
            },
        ),
        migrations.CreateModel(
            name='CoreAuthOracle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('user', models.CharField(max_length=255)),
                ('fingerprint', models.CharField(max_length=255)),
                ('tenancy', models.CharField(max_length=255)),
                ('region', models.CharField(max_length=255)),
                ('private_key', models.BinaryField()),
                ('profile', models.CharField(max_length=255)),
                ('connection', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='auth_oracle', to='apps.coreconnection')),
            ],
            options={
                'db_table': 'core_auth_oracle',
            },
        ),
        migrations.CreateModel(
            name='CoreAuthLinode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('api_key', models.BinaryField(null=True)),
                ('info_name', models.CharField(max_length=64, null=True)),
                ('info_email', models.CharField(max_length=64, null=True)),
                ('encryption_updated', models.BooleanField(default=False)),
                ('connection', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='auth_linode', to='apps.coreconnection')),
            ],
            options={
                'db_table': 'core_auth_linode',
            },
        ),
        migrations.CreateModel(
            name='CoreAuthHetzner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('api_key', models.BinaryField(null=True)),
                ('token_refresh_failed', models.BooleanField(default=False)),
                ('encryption_updated', models.BooleanField(default=False)),
                ('connection', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='auth_hetzner', to='apps.coreconnection')),
            ],
            options={
                'db_table': 'core_auth_hetzner',
            },
        ),
        migrations.CreateModel(
            name='CoreAuthGoogleCloud',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('service_key', models.BinaryField()),
                ('encryption_updated', models.BooleanField(default=False)),
                ('connection', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='auth_google_cloud', to='apps.coreconnection')),
            ],
            options={
                'db_table': 'core_auth_google_cloud',
            },
        ),
        migrations.CreateModel(
            name='CoreAuthDigitalOcean',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('access_token', models.BinaryField(null=True)),
                ('refresh_token', models.BinaryField(null=True)),
                ('scope', models.CharField(max_length=32, null=True)),
                ('token_type', models.CharField(max_length=32, null=True)),
                ('expiry', models.DateTimeField(null=True)),
                ('token_refresh_failed', models.BooleanField(default=False)),
                ('info_name', models.CharField(max_length=64, null=True)),
                ('info_email', models.CharField(max_length=64, null=True)),
                ('info_uuid', models.CharField(max_length=255, null=True)),
                ('api_key', models.BinaryField(null=True)),
                ('encryption_updated', models.BooleanField(default=False)),
                ('connection', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='auth_digitalocean', to='apps.coreconnection')),
            ],
            options={
                'db_table': 'core_auth_digitalocean',
            },
        ),
        migrations.CreateModel(
            name='CoreAuthDatabase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('host', models.CharField(max_length=255)),
                ('port', models.IntegerField()),
                ('database_name', models.CharField(max_length=255, null=True)),
                ('all_databases', models.BooleanField(default=False)),
                ('username', models.BinaryField(null=True)),
                ('password', models.BinaryField(null=True)),
                ('type', models.IntegerField(choices=[(1, 'MySQL'), (2, 'MariaDB'), (3, 'PostgreSQL')])),
                ('version', models.CharField(choices=[('mysql_8_0', 'MySQL 8.0'), ('mysql_5_7', 'MySQL 5.7'), ('mysql_5_6', 'MySQL 5.6'), ('mysql_5_5', 'MySQL 5.5'), ('mariadb_10_10', 'MariaDB 10.10'), ('mariadb_10_9', 'MariaDB 10.9'), ('mariadb_10_8', 'MariaDB 10.8'), ('mariadb_10_7', 'MariaDB 10.7'), ('mariadb_10_6', 'MariaDB 10.6'), ('mariadb_10_5', 'MariaDB 10.5'), ('mariadb_10_4', 'MariaDB 10.4'), ('mariadb_10_3', 'MariaDB 10.3'), ('mariadb_10_2', 'MariaDB 10.2'), ('mariadb_10_1', 'MariaDB 10.1'), ('postgres_15', 'PostgreSQL 15'), ('postgres_14', 'PostgreSQL 14'), ('postgres_13', 'PostgreSQL 13'), ('postgres_12', 'PostgreSQL 12'), ('postgres_11', 'PostgreSQL 11'), ('postgres_10', 'PostgreSQL 10'), ('postgres_9', 'PostgreSQL 9')], max_length=32)),
                ('include_stored_procedure', models.BooleanField(null=True)),
                ('use_ssl', models.BooleanField(default=False)),
                ('info_name', models.CharField(max_length=64, null=True)),
                ('ssh_username', models.BinaryField(null=True)),
                ('ssh_password', models.BinaryField(null=True)),
                ('ssh_port', models.IntegerField(null=True)),
                ('ssh_host', models.CharField(max_length=255, null=True)),
                ('use_public_key', models.BooleanField(null=True)),
                ('use_private_key', models.BooleanField(null=True)),
                ('private_key', models.BinaryField(null=True)),
                ('encryption_updated', models.BooleanField(default=False)),
                ('flag_use_sha1_key_verification', models.BooleanField(default=False, null=True)),
                ('connection', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='auth_database', to='apps.coreconnection')),
            ],
            options={
                'db_table': 'core_auth_database',
            },
        ),
        migrations.CreateModel(
            name='CoreAuthBasecamp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('access_token', models.BinaryField(null=True)),
                ('refresh_token', models.BinaryField(null=True)),
                ('token_type', models.CharField(default='Bearer', max_length=255)),
                ('expiry', models.DateTimeField(null=True)),
                ('identity_id', models.CharField(max_length=255)),
                ('metadata', models.JSONField(null=True)),
                ('connection', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='auth_basecamp', to='apps.coreconnection')),
            ],
            options={
                'db_table': 'core_auth_basecamp',
            },
        ),
        migrations.CreateModel(
            name='CoreAuthAWSRDS',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('access_key', models.BinaryField()),
                ('info_name', models.CharField(max_length=64, null=True)),
                ('secret_key', models.BinaryField()),
                ('encryption_updated', models.BooleanField(default=False)),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='auth_aws_rds', to='apps.coreawsregion')),
                ('connection', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='auth_aws_rds', to='apps.coreconnection')),
            ],
            options={
                'db_table': 'core_auth_aws_rds',
            },
        ),
        migrations.CreateModel(
            name='CoreAuthAWS',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('access_key', models.BinaryField(null=True)),
                ('secret_key', models.BinaryField(null=True)),
                ('encryption_updated', models.BooleanField(default=False)),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='auth_aws', to='apps.coreawsregion')),
                ('connection', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='auth_aws', to='apps.coreconnection')),
            ],
            options={
                'db_table': 'core_auth_aws',
            },
        ),
        migrations.CreateModel(
            name='CoreConnectionLocationIntegration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='apps.coreconnectionlocation')),
                ('integration', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='apps.coreintegration')),
            ],
            options={
                'verbose_name': 'Integration Location',
                'verbose_name_plural': 'Integration Locations',
                'db_table': 'core_connection_location_mtm_integrations',
            },
        ),
        migrations.AddField(
            model_name='coreconnectionlocation',
            name='integrations',
            field=models.ManyToManyField(related_name='locations', through='apps.CoreConnectionLocationIntegration', to='apps.coreintegration'),
        ),
        migrations.CreateModel(
            name='CoreInvite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('status', models.IntegerField(choices=[(1, 'Accepted'), (2, 'Expired'), (3, 'Cancelled'), (4, 'Pending')], default=4, editable=False)),
                ('notify_on_success', models.BooleanField(default=True, null=True)),
                ('notify_on_fail', models.BooleanField(default=True, null=True)),
                ('timezone', models.CharField(default='UTC', max_length=64)),
                ('first_name', models.CharField(max_length=64)),
                ('last_name', models.CharField(max_length=64)),
                ('email', models.EmailField(max_length=254)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('account', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='invites', to='apps.coreaccount')),
                ('added_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invites_sent', to='apps.coremember')),
                ('groups', models.ManyToManyField(related_name='invites', to='apps.coreaccountgroup')),
            ],
            options={
                'db_table': 'core_invite',
            },
        ),
        migrations.CreateModel(
            name='CoreAuthLightsail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('info_name', models.CharField(max_length=64, null=True)),
                ('access_key', models.BinaryField(null=True)),
                ('secret_key', models.BinaryField(null=True)),
                ('encryption_updated', models.BooleanField(default=False)),
                ('connection', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='auth_lightsail', to='apps.coreconnection')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='auth_lightsail', to='apps.corelightsailregion')),
            ],
            options={
                'db_table': 'core_auth_lightsail',
            },
        ),
        migrations.CreateModel(
            name='CoreLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('type', models.IntegerField(choices=[(1, 'GENERIC'), (2, 'NODE'), (3, 'CONNECTION')], default=1)),
                ('data', models.JSONField(null=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='apps.coreaccount')),
            ],
            options={
                'db_table': 'core_log',
            },
        ),
        migrations.CreateModel(
            name='CoreMemberAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('status', models.IntegerField(choices=[(1, 'Active'), (2, 'Pending'), (3, 'Suspended'), (4, 'Invited')], default=1)),
                ('notify_on_success', models.BooleanField(default=True, null=True)),
                ('notify_on_fail', models.BooleanField(default=True, null=True)),
                ('current', models.BooleanField(default=False, editable=False)),
                ('primary', models.BooleanField(default=False, editable=False)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='memberships', to='apps.coreaccount')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='memberships', to='apps.coremember')),
            ],
            options={
                'verbose_name': 'Member Account',
                'verbose_name_plural': 'Member Accounts',
                'db_table': 'core_member_mtm_account',
            },
        ),
        migrations.AddField(
            model_name='coremember',
            name='accounts',
            field=models.ManyToManyField(related_name='members', through='apps.CoreMemberAccount', to='apps.coreaccount'),
        ),
        migrations.CreateModel(
            name='CoreNode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('status', models.IntegerField(choices=[(1, 'Active'), (2, 'Ready for Backup'), (3, 'Backup In-Progress'), (4, 'Retrying Backup'), (5, 'Suspended'), (6, 'Paused'), (8, 'Paused (Max Retries)'), (7, 'Delete Requested'), (9, 'Delete Completed')], default=1)),
                ('type', models.IntegerField(choices=[(1, 'Cloud'), (2, 'Volume'), (3, 'Website'), (4, 'Database'), (5, 'SaaS')])),
                ('name', models.CharField(max_length=255)),
                ('flag_next_run_wait', models.IntegerField(null=True)),
                ('flag_delete_node', models.BooleanField(default=False)),
                ('notify_on_success', models.BooleanField(default=True, null=True)),
                ('notify_on_fail', models.BooleanField(default=True, null=True)),
                ('email_data', models.JSONField(null=True)),
                ('timezone', models.CharField(default='UTC', max_length=64)),
                ('added_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='added_nodes', to='apps.coremember')),
                ('connection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nodes', to='apps.coreconnection')),
            ],
            options={
                'db_table': 'core_node',
                'permissions': (('create_ondemand_backup', 'can create on-demand backup'), ('create_schedule', 'can create schedule for backup')),
            },
        ),
        migrations.CreateModel(
            name='CoreLinode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('name', models.CharField(max_length=255)),
                ('unique_id', models.CharField(max_length=255)),
                ('linode_id', models.CharField(max_length=255, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('metadata', models.JSONField(null=True)),
                ('node', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='linode', to='apps.corenode')),
            ],
            options={
                'db_table': 'core_linode',
            },
        ),
        migrations.CreateModel(
            name='CoreLightsail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('name', models.CharField(max_length=255)),
                ('unique_id', models.CharField(max_length=255)),
                ('notes', models.TextField(blank=True, null=True)),
                ('metadata', models.JSONField(null=True)),
                ('node', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='lightsail', to='apps.corenode')),
            ],
            options={
                'db_table': 'core_lightsail',
            },
        ),
        migrations.CreateModel(
            name='CoreIntercom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('name', models.CharField(max_length=255)),
                ('notes', models.TextField(blank=True, null=True)),
                ('node', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='intercom', to='apps.corenode')),
            ],
            options={
                'db_table': 'core_intercom',
            },
        ),
        migrations.CreateModel(
            name='CoreHetzner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('name', models.CharField(max_length=255)),
                ('unique_id', models.CharField(max_length=255)),
                ('notes', models.TextField(blank=True, null=True)),
                ('metadata', models.JSONField(null=True)),
                ('node', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='hetzner', to='apps.corenode')),
            ],
            options={
                'db_table': 'core_hetzner',
            },
        ),
        migrations.CreateModel(
            name='CoreGoogleCloud',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('name', models.CharField(max_length=255)),
                ('unique_id', models.CharField(max_length=255)),
                ('project_id', models.CharField(max_length=255)),
                ('zone', models.CharField(max_length=255)),
                ('notes', models.TextField(blank=True, null=True)),
                ('metadata', models.JSONField(null=True)),
                ('node', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='google_cloud', to='apps.corenode')),
            ],
            options={
                'db_table': 'core_google_cloud',
            },
        ),
        migrations.CreateModel(
            name='CoreDigitalOcean',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('name', models.CharField(max_length=255)),
                ('unique_id', models.CharField(max_length=255)),
                ('notes', models.TextField(blank=True, null=True)),
                ('metadata', models.JSONField(null=True)),
                ('node', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='digitalocean', to='apps.corenode')),
            ],
            options={
                'db_table': 'core_digitalocean',
            },
        ),
        migrations.CreateModel(
            name='CoreDatabase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('name', models.CharField(max_length=255)),
                ('tables', models.JSONField(null=True)),
                ('all_tables', models.BooleanField(null=True)),
                ('databases', models.JSONField(null=True)),
                ('all_databases', models.BooleanField(null=True)),
                ('option_single_transaction', models.BooleanField(default=True, null=True)),
                ('option_skip_opt', models.BooleanField(default=False, null=True)),
                ('option_compress', models.BooleanField(default=True, null=True)),
                ('option_gtid_purged_off', models.BooleanField(default=True, null=True)),
                ('option_postgres_format_custom', models.BooleanField(default=False, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('option_postgres', models.TextField(blank=True, null=True)),
                ('option_mysql', models.TextField(blank=True, null=True)),
                ('option_mariadb', models.TextField(blank=True, null=True)),
                ('option_mongodb', models.TextField(blank=True, null=True)),
                ('node', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='database', to='apps.corenode')),
            ],
            options={
                'db_table': 'core_database',
            },
        ),
        migrations.CreateModel(
            name='CoreContabo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('name', models.CharField(max_length=255)),
                ('unique_id', models.CharField(max_length=255)),
                ('notes', models.TextField(blank=True, null=True)),
                ('metadata', models.JSONField(null=True)),
                ('node', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='contabo', to='apps.corenode')),
            ],
            options={
                'db_table': 'core_contabo',
            },
        ),
        migrations.CreateModel(
            name='CoreBasecamp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('name', models.CharField(max_length=255)),
                ('notes', models.TextField(blank=True, null=True)),
                ('projects', models.JSONField(null=True)),
                ('all_projects', models.BooleanField(default=False)),
                ('node', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='basecamp', to='apps.corenode')),
            ],
            options={
                'db_table': 'core_basecamp',
            },
        ),
        migrations.CreateModel(
            name='CoreAWSRDS',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('name', models.CharField(max_length=255)),
                ('unique_id', models.CharField(max_length=255)),
                ('notes', models.TextField(blank=True, null=True)),
                ('metadata', models.JSONField(null=True)),
                ('node', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='aws_rds', to='apps.corenode')),
            ],
            options={
                'db_table': 'core_aws_rds',
            },
        ),
        migrations.CreateModel(
            name='CoreAWS',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('name', models.CharField(max_length=255)),
                ('unique_id', models.CharField(max_length=255)),
                ('no_reboot', models.BooleanField(default=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('metadata', models.JSONField(null=True)),
                ('node', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='aws', to='apps.corenode')),
            ],
            options={
                'db_table': 'core_aws',
            },
        ),
        migrations.AddField(
            model_name='coreaccountgroup',
            name='nodes',
            field=models.ManyToManyField(related_name='enrollments', to='apps.corenode'),
        ),
        migrations.CreateModel(
            name='CoreNotificationSlack',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('app_id', models.CharField(editable=False, max_length=64)),
                ('token_type', models.CharField(editable=False, max_length=64)),
                ('access_token', models.TextField(editable=False)),
                ('bot_user_id', models.CharField(editable=False, max_length=64)),
                ('refresh_token', models.TextField(editable=False)),
                ('expiry', models.DateTimeField(null=True)),
                ('channel', models.CharField(editable=False, max_length=64)),
                ('channel_id', models.CharField(editable=False, max_length=64)),
                ('configuration_url', models.URLField(editable=False)),
                ('url', models.URLField(editable=False)),
                ('data', models.JSONField(null=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification_slack', to='apps.coreaccount')),
                ('added_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notification_slack', to='apps.coremember')),
            ],
            options={
                'db_table': 'core_notification_slack',
            },
        ),
        migrations.CreateModel(
            name='CoreNotificationTelegram',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('chat_id', models.CharField(editable=False, max_length=64)),
                ('channel_name', models.CharField(editable=False, max_length=64)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification_telegram', to='apps.coreaccount')),
                ('added_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notification_telegram', to='apps.coremember')),
            ],
            options={
                'db_table': 'core_notification_telegram',
            },
        ),
        migrations.CreateModel(
            name='CoreOracle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('name', models.CharField(max_length=255)),
                ('unique_id', models.CharField(max_length=255)),
                ('notes', models.TextField(blank=True, null=True)),
                ('metadata', models.JSONField(null=True)),
                ('node', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='oracle', to='apps.corenode')),
            ],
            options={
                'db_table': 'core_oracle',
            },
        ),
        migrations.CreateModel(
            name='CoreOVHCA',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('name', models.CharField(max_length=255)),
                ('unique_id', models.CharField(max_length=255)),
                ('project_id', models.CharField(max_length=255)),
                ('notes', models.TextField(blank=True, null=True)),
                ('metadata', models.JSONField(null=True)),
                ('node', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='ovh_ca', to='apps.corenode')),
            ],
            options={
                'db_table': 'core_ovh_ca',
            },
        ),
        migrations.CreateModel(
            name='CoreOVHEU',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('name', models.CharField(max_length=255)),
                ('unique_id', models.CharField(max_length=255)),
                ('project_id', models.CharField(max_length=255)),
                ('notes', models.TextField(blank=True, null=True)),
                ('metadata', models.JSONField(null=True)),
                ('node', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='ovh_eu', to='apps.corenode')),
            ],
            options={
                'db_table': 'core_ovh_eu',
            },
        ),
        migrations.CreateModel(
            name='CoreOVHUS',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('name', models.CharField(max_length=255)),
                ('unique_id', models.CharField(max_length=255)),
                ('project_id', models.CharField(max_length=255)),
                ('notes', models.TextField(blank=True, null=True)),
                ('metadata', models.JSONField(null=True)),
                ('node', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='ovh_us', to='apps.corenode')),
            ],
            options={
                'db_table': 'core_ovh_us',
            },
        ),
        migrations.CreateModel(
            name='CoreSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('status', models.IntegerField(choices=[(1, 'Active'), (2, 'Paused'), (3, 'Delete Requested')], default=1)),
                ('type', models.CharField(choices=[('cron', 'Cron'), ('rate', 'Rate'), ('at', 'One-time')], default='cron', max_length=64)),
                ('rate_unit', models.CharField(choices=[('minutes', 'Minutes'), ('hours', 'Hours'), ('days', 'Days')], max_length=64, null=True)),
                ('rate_value', models.IntegerField(null=True)),
                ('at_datetime', models.DateTimeField(null=True)),
                ('name', models.CharField(max_length=255)),
                ('keep_last', models.PositiveIntegerField(null=True)),
                ('type_legacy', models.CharField(default='crontab', max_length=32)),
                ('hour', models.CharField(blank=True, max_length=255, null=True)),
                ('minute', models.CharField(blank=True, max_length=255, null=True)),
                ('day_of_week', models.CharField(blank=True, max_length=255, null=True)),
                ('day_of_month', models.CharField(blank=True, max_length=255, null=True)),
                ('month_of_year', models.CharField(blank=True, max_length=255, null=True)),
                ('year', models.CharField(blank=True, default='*', max_length=255, null=True)),
                ('delete_remote_backups', models.BooleanField(default=False)),
                ('compressed_backups_only', models.BooleanField(default=False, null=True)),
                ('delete_remote_backups_time', models.IntegerField(null=True)),
                ('encrypt_backup', models.BooleanField(default=False, null=True)),
                ('timezone', models.CharField(max_length=64)),
                ('notes', models.TextField(blank=True, null=True)),
                ('aws_schedule_arn', models.TextField(blank=True, null=True)),
                ('added_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='added_schedules', to='apps.coremember')),
                ('celery_periodic_task', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='schedules', to='django_celery_beat.periodictask')),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to='apps.corenode')),
            ],
            options={
                'db_table': 'core_schedule',
            },
        ),
        migrations.CreateModel(
            name='CoreOVHUSBackup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('uuid', models.CharField(editable=False, max_length=1024, null=True)),
                ('celery_task_id', models.CharField(editable=False, max_length=255, null=True)),
                ('name', models.CharField(max_length=255, null=True)),
                ('status', models.IntegerField(choices=[(1, 'Pending'), (2, 'In-Progress'), (3, 'Complete'), (4, 'Failed'), (5, 'Retrying'), (6, 'Started'), (7, 'Max Retries Failed'), (8, 'Ready For Upload'), (9, 'Upload In Progress'), (10, 'Upload Complete'), (22, 'Upload Validation'), (11, 'Upload Failed'), (12, 'Delete REQUESTED'), (13, 'Delete In-Progress'), (14, 'Delete Completed'), (15, 'Delete Failed'), (20, 'Delete Failed (Not Found)'), (16, 'Delete Max Retries Failed'), (17, 'Download In-Progress'), (18, 'Download Complete'), (19, 'Cancelled'), (21, 'Timeout'), (30, 'Storage Validation Failed')], default=3)),
                ('type', models.IntegerField(choices=[(1, 'On-Demand'), (2, 'Scheduled')], null=True)),
                ('attempt_no', models.PositiveIntegerField(null=True)),
                ('old_schedule_name', models.CharField(max_length=255, null=True)),
                ('old_schedule_timezone', models.CharField(max_length=255, null=True)),
                ('old_delete_requested', models.BooleanField(null=True)),
                ('old_delete_in_progress', models.BooleanField(default=False)),
                ('old_max_delete_retry', models.BooleanField(default=False)),
                ('completed_on_attempt_no', models.IntegerField(null=True)),
                ('notes', models.TextField(null=True)),
                ('unique_id', models.CharField(max_length=64)),
                ('size_gigabytes', models.FloatField(null=True)),
                ('metadata', models.JSONField(null=True)),
                ('ovh_us', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='backups', to='apps.coreovhus')),
                ('schedule', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ovh_us_backups', to='apps.coreschedule')),
            ],
            options={
                'db_table': 'core_ovh_us_backup',
            },
        ),
        migrations.CreateModel(
            name='CoreOVHEUBackup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('uuid', models.CharField(editable=False, max_length=1024, null=True)),
                ('celery_task_id', models.CharField(editable=False, max_length=255, null=True)),
                ('name', models.CharField(max_length=255, null=True)),
                ('status', models.IntegerField(choices=[(1, 'Pending'), (2, 'In-Progress'), (3, 'Complete'), (4, 'Failed'), (5, 'Retrying'), (6, 'Started'), (7, 'Max Retries Failed'), (8, 'Ready For Upload'), (9, 'Upload In Progress'), (10, 'Upload Complete'), (22, 'Upload Validation'), (11, 'Upload Failed'), (12, 'Delete REQUESTED'), (13, 'Delete In-Progress'), (14, 'Delete Completed'), (15, 'Delete Failed'), (20, 'Delete Failed (Not Found)'), (16, 'Delete Max Retries Failed'), (17, 'Download In-Progress'), (18, 'Download Complete'), (19, 'Cancelled'), (21, 'Timeout'), (30, 'Storage Validation Failed')], default=3)),
                ('type', models.IntegerField(choices=[(1, 'On-Demand'), (2, 'Scheduled')], null=True)),
                ('attempt_no', models.PositiveIntegerField(null=True)),
                ('old_schedule_name', models.CharField(max_length=255, null=True)),
                ('old_schedule_timezone', models.CharField(max_length=255, null=True)),
                ('old_delete_requested', models.BooleanField(null=True)),
                ('old_delete_in_progress', models.BooleanField(default=False)),
                ('old_max_delete_retry', models.BooleanField(default=False)),
                ('completed_on_attempt_no', models.IntegerField(null=True)),
                ('notes', models.TextField(null=True)),
                ('unique_id', models.CharField(max_length=64)),
                ('size_gigabytes', models.FloatField(null=True)),
                ('metadata', models.JSONField(null=True)),
                ('ovh_eu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='backups', to='apps.coreovheu')),
                ('schedule', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ovh_eu_backups', to='apps.coreschedule')),
            ],
            options={
                'db_table': 'core_ovh_eu_backup',
            },
        ),
        migrations.CreateModel(
            name='CoreOVHCABackup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('uuid', models.CharField(editable=False, max_length=1024, null=True)),
                ('celery_task_id', models.CharField(editable=False, max_length=255, null=True)),
                ('name', models.CharField(max_length=255, null=True)),
                ('status', models.IntegerField(choices=[(1, 'Pending'), (2, 'In-Progress'), (3, 'Complete'), (4, 'Failed'), (5, 'Retrying'), (6, 'Started'), (7, 'Max Retries Failed'), (8, 'Ready For Upload'), (9, 'Upload In Progress'), (10, 'Upload Complete'), (22, 'Upload Validation'), (11, 'Upload Failed'), (12, 'Delete REQUESTED'), (13, 'Delete In-Progress'), (14, 'Delete Completed'), (15, 'Delete Failed'), (20, 'Delete Failed (Not Found)'), (16, 'Delete Max Retries Failed'), (17, 'Download In-Progress'), (18, 'Download Complete'), (19, 'Cancelled'), (21, 'Timeout'), (30, 'Storage Validation Failed')], default=3)),
                ('type', models.IntegerField(choices=[(1, 'On-Demand'), (2, 'Scheduled')], null=True)),
                ('attempt_no', models.PositiveIntegerField(null=True)),
                ('old_schedule_name', models.CharField(max_length=255, null=True)),
                ('old_schedule_timezone', models.CharField(max_length=255, null=True)),
                ('old_delete_requested', models.BooleanField(null=True)),
                ('old_delete_in_progress', models.BooleanField(default=False)),
                ('old_max_delete_retry', models.BooleanField(default=False)),
                ('completed_on_attempt_no', models.IntegerField(null=True)),
                ('notes', models.TextField(null=True)),
                ('unique_id', models.CharField(max_length=64, null=True)),
                ('size_gigabytes', models.FloatField(null=True)),
                ('metadata', models.JSONField(null=True)),
                ('ovh_ca', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='backups', to='apps.coreovhca')),
                ('schedule', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ovh_ca_backups', to='apps.coreschedule')),
            ],
            options={
                'db_table': 'core_ovh_ca_backup',
            },
        ),
        migrations.CreateModel(
            name='CoreOracleBackup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('uuid', models.CharField(editable=False, max_length=1024, null=True)),
                ('celery_task_id', models.CharField(editable=False, max_length=255, null=True)),
                ('name', models.CharField(max_length=255, null=True)),
                ('status', models.IntegerField(choices=[(1, 'Pending'), (2, 'In-Progress'), (3, 'Complete'), (4, 'Failed'), (5, 'Retrying'), (6, 'Started'), (7, 'Max Retries Failed'), (8, 'Ready For Upload'), (9, 'Upload In Progress'), (10, 'Upload Complete'), (22, 'Upload Validation'), (11, 'Upload Failed'), (12, 'Delete REQUESTED'), (13, 'Delete In-Progress'), (14, 'Delete Completed'), (15, 'Delete Failed'), (20, 'Delete Failed (Not Found)'), (16, 'Delete Max Retries Failed'), (17, 'Download In-Progress'), (18, 'Download Complete'), (19, 'Cancelled'), (21, 'Timeout'), (30, 'Storage Validation Failed')], default=3)),
                ('type', models.IntegerField(choices=[(1, 'On-Demand'), (2, 'Scheduled')], null=True)),
                ('attempt_no', models.PositiveIntegerField(null=True)),
                ('old_schedule_name', models.CharField(max_length=255, null=True)),
                ('old_schedule_timezone', models.CharField(max_length=255, null=True)),
                ('old_delete_requested', models.BooleanField(null=True)),
                ('old_delete_in_progress', models.BooleanField(default=False)),
                ('old_max_delete_retry', models.BooleanField(default=False)),
                ('completed_on_attempt_no', models.IntegerField(null=True)),
                ('notes', models.TextField(null=True)),
                ('unique_id', models.CharField(max_length=255, null=True)),
                ('size_gigabytes', models.FloatField(null=True)),
                ('metadata', models.JSONField(null=True)),
                ('oracle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='backups', to='apps.coreoracle')),
                ('schedule', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='oracle_backups', to='apps.coreschedule')),
            ],
            options={
                'db_table': 'core_oracle_backup',
            },
        ),
        migrations.CreateModel(
            name='CoreLinodeBackup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('uuid', models.CharField(editable=False, max_length=1024, null=True)),
                ('celery_task_id', models.CharField(editable=False, max_length=255, null=True)),
                ('name', models.CharField(max_length=255, null=True)),
                ('status', models.IntegerField(choices=[(1, 'Pending'), (2, 'In-Progress'), (3, 'Complete'), (4, 'Failed'), (5, 'Retrying'), (6, 'Started'), (7, 'Max Retries Failed'), (8, 'Ready For Upload'), (9, 'Upload In Progress'), (10, 'Upload Complete'), (22, 'Upload Validation'), (11, 'Upload Failed'), (12, 'Delete REQUESTED'), (13, 'Delete In-Progress'), (14, 'Delete Completed'), (15, 'Delete Failed'), (20, 'Delete Failed (Not Found)'), (16, 'Delete Max Retries Failed'), (17, 'Download In-Progress'), (18, 'Download Complete'), (19, 'Cancelled'), (21, 'Timeout'), (30, 'Storage Validation Failed')], default=3)),
                ('type', models.IntegerField(choices=[(1, 'On-Demand'), (2, 'Scheduled')], null=True)),
                ('attempt_no', models.PositiveIntegerField(null=True)),
                ('old_schedule_name', models.CharField(max_length=255, null=True)),
                ('old_schedule_timezone', models.CharField(max_length=255, null=True)),
                ('old_delete_requested', models.BooleanField(null=True)),
                ('old_delete_in_progress', models.BooleanField(default=False)),
                ('old_max_delete_retry', models.BooleanField(default=False)),
                ('completed_on_attempt_no', models.IntegerField(null=True)),
                ('notes', models.TextField(null=True)),
                ('unique_id', models.CharField(max_length=64)),
                ('size_gigabytes', models.FloatField(null=True)),
                ('metadata', models.JSONField(null=True)),
                ('linode', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='backups', to='apps.corelinode')),
                ('schedule', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='linode_backups', to='apps.coreschedule')),
            ],
            options={
                'db_table': 'core_linode_backup',
            },
        ),
        migrations.CreateModel(
            name='CoreLightsailBackup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('uuid', models.CharField(editable=False, max_length=1024, null=True)),
                ('celery_task_id', models.CharField(editable=False, max_length=255, null=True)),
                ('name', models.CharField(max_length=255, null=True)),
                ('status', models.IntegerField(choices=[(1, 'Pending'), (2, 'In-Progress'), (3, 'Complete'), (4, 'Failed'), (5, 'Retrying'), (6, 'Started'), (7, 'Max Retries Failed'), (8, 'Ready For Upload'), (9, 'Upload In Progress'), (10, 'Upload Complete'), (22, 'Upload Validation'), (11, 'Upload Failed'), (12, 'Delete REQUESTED'), (13, 'Delete In-Progress'), (14, 'Delete Completed'), (15, 'Delete Failed'), (20, 'Delete Failed (Not Found)'), (16, 'Delete Max Retries Failed'), (17, 'Download In-Progress'), (18, 'Download Complete'), (19, 'Cancelled'), (21, 'Timeout'), (30, 'Storage Validation Failed')], default=3)),
                ('type', models.IntegerField(choices=[(1, 'On-Demand'), (2, 'Scheduled')], null=True)),
                ('attempt_no', models.PositiveIntegerField(null=True)),
                ('old_schedule_name', models.CharField(max_length=255, null=True)),
                ('old_schedule_timezone', models.CharField(max_length=255, null=True)),
                ('old_delete_requested', models.BooleanField(null=True)),
                ('old_delete_in_progress', models.BooleanField(default=False)),
                ('old_max_delete_retry', models.BooleanField(default=False)),
                ('completed_on_attempt_no', models.IntegerField(null=True)),
                ('notes', models.TextField(null=True)),
                ('region', models.CharField(max_length=255, null=True)),
                ('unique_id', models.CharField(max_length=64)),
                ('size_gigabytes', models.FloatField(null=True)),
                ('metadata', models.JSONField(null=True)),
                ('lightsail', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='backups', to='apps.corelightsail')),
                ('schedule', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lightsail_backups', to='apps.coreschedule')),
            ],
            options={
                'db_table': 'core_lightsail_backup',
            },
        ),
        migrations.CreateModel(
            name='CoreHetznerBackup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('uuid', models.CharField(editable=False, max_length=1024, null=True)),
                ('celery_task_id', models.CharField(editable=False, max_length=255, null=True)),
                ('name', models.CharField(max_length=255, null=True)),
                ('status', models.IntegerField(choices=[(1, 'Pending'), (2, 'In-Progress'), (3, 'Complete'), (4, 'Failed'), (5, 'Retrying'), (6, 'Started'), (7, 'Max Retries Failed'), (8, 'Ready For Upload'), (9, 'Upload In Progress'), (10, 'Upload Complete'), (22, 'Upload Validation'), (11, 'Upload Failed'), (12, 'Delete REQUESTED'), (13, 'Delete In-Progress'), (14, 'Delete Completed'), (15, 'Delete Failed'), (20, 'Delete Failed (Not Found)'), (16, 'Delete Max Retries Failed'), (17, 'Download In-Progress'), (18, 'Download Complete'), (19, 'Cancelled'), (21, 'Timeout'), (30, 'Storage Validation Failed')], default=3)),
                ('type', models.IntegerField(choices=[(1, 'On-Demand'), (2, 'Scheduled')], null=True)),
                ('attempt_no', models.PositiveIntegerField(null=True)),
                ('old_schedule_name', models.CharField(max_length=255, null=True)),
                ('old_schedule_timezone', models.CharField(max_length=255, null=True)),
                ('old_delete_requested', models.BooleanField(null=True)),
                ('old_delete_in_progress', models.BooleanField(default=False)),
                ('old_max_delete_retry', models.BooleanField(default=False)),
                ('completed_on_attempt_no', models.IntegerField(null=True)),
                ('notes', models.TextField(null=True)),
                ('unique_id', models.CharField(max_length=255, null=True)),
                ('action_id', models.CharField(max_length=255, null=True)),
                ('size_gigabytes', models.FloatField(null=True)),
                ('metadata', models.JSONField(null=True)),
                ('hetzner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='backups', to='apps.corehetzner')),
                ('schedule', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='hetzner_backups', to='apps.coreschedule')),
            ],
            options={
                'db_table': 'core_hetzner_backup',
            },
        ),
        migrations.CreateModel(
            name='CoreGoogleCloudBackup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('uuid', models.CharField(editable=False, max_length=1024, null=True)),
                ('celery_task_id', models.CharField(editable=False, max_length=255, null=True)),
                ('name', models.CharField(max_length=255, null=True)),
                ('status', models.IntegerField(choices=[(1, 'Pending'), (2, 'In-Progress'), (3, 'Complete'), (4, 'Failed'), (5, 'Retrying'), (6, 'Started'), (7, 'Max Retries Failed'), (8, 'Ready For Upload'), (9, 'Upload In Progress'), (10, 'Upload Complete'), (22, 'Upload Validation'), (11, 'Upload Failed'), (12, 'Delete REQUESTED'), (13, 'Delete In-Progress'), (14, 'Delete Completed'), (15, 'Delete Failed'), (20, 'Delete Failed (Not Found)'), (16, 'Delete Max Retries Failed'), (17, 'Download In-Progress'), (18, 'Download Complete'), (19, 'Cancelled'), (21, 'Timeout'), (30, 'Storage Validation Failed')], default=3)),
                ('type', models.IntegerField(choices=[(1, 'On-Demand'), (2, 'Scheduled')], null=True)),
                ('attempt_no', models.PositiveIntegerField(null=True)),
                ('old_schedule_name', models.CharField(max_length=255, null=True)),
                ('old_schedule_timezone', models.CharField(max_length=255, null=True)),
                ('old_delete_requested', models.BooleanField(null=True)),
                ('old_delete_in_progress', models.BooleanField(default=False)),
                ('old_max_delete_retry', models.BooleanField(default=False)),
                ('completed_on_attempt_no', models.IntegerField(null=True)),
                ('notes', models.TextField(null=True)),
                ('unique_id', models.CharField(max_length=64)),
                ('size_gigabytes', models.FloatField(null=True)),
                ('metadata', models.JSONField(null=True)),
                ('google_cloud', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='backups', to='apps.coregooglecloud')),
                ('schedule', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='google_cloud_backups', to='apps.coreschedule')),
            ],
            options={
                'db_table': 'core_google_cloud_backup',
            },
        ),
        migrations.CreateModel(
            name='CoreDigitalOceanBackup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('uuid', models.CharField(editable=False, max_length=1024, null=True)),
                ('celery_task_id', models.CharField(editable=False, max_length=255, null=True)),
                ('name', models.CharField(max_length=255, null=True)),
                ('status', models.IntegerField(choices=[(1, 'Pending'), (2, 'In-Progress'), (3, 'Complete'), (4, 'Failed'), (5, 'Retrying'), (6, 'Started'), (7, 'Max Retries Failed'), (8, 'Ready For Upload'), (9, 'Upload In Progress'), (10, 'Upload Complete'), (22, 'Upload Validation'), (11, 'Upload Failed'), (12, 'Delete REQUESTED'), (13, 'Delete In-Progress'), (14, 'Delete Completed'), (15, 'Delete Failed'), (20, 'Delete Failed (Not Found)'), (16, 'Delete Max Retries Failed'), (17, 'Download In-Progress'), (18, 'Download Complete'), (19, 'Cancelled'), (21, 'Timeout'), (30, 'Storage Validation Failed')], default=3)),
                ('type', models.IntegerField(choices=[(1, 'On-Demand'), (2, 'Scheduled')], null=True)),
                ('attempt_no', models.PositiveIntegerField(null=True)),
                ('old_schedule_name', models.CharField(max_length=255, null=True)),
                ('old_schedule_timezone', models.CharField(max_length=255, null=True)),
                ('old_delete_requested', models.BooleanField(null=True)),
                ('old_delete_in_progress', models.BooleanField(default=False)),
                ('old_max_delete_retry', models.BooleanField(default=False)),
                ('completed_on_attempt_no', models.IntegerField(null=True)),
                ('notes', models.TextField(null=True)),
                ('unique_id', models.CharField(max_length=255, null=True)),
                ('action_id', models.CharField(max_length=255, null=True)),
                ('size_gigabytes', models.FloatField(null=True)),
                ('metadata', models.JSONField(null=True)),
                ('digitalocean', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='backups', to='apps.coredigitalocean')),
                ('schedule', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='digitalocean_backups', to='apps.coreschedule')),
            ],
            options={
                'db_table': 'core_digitalocean_backup',
            },
        ),
        migrations.CreateModel(
            name='CoreDatabaseBackup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('uuid', models.CharField(editable=False, max_length=1024, null=True)),
                ('celery_task_id', models.CharField(editable=False, max_length=255, null=True)),
                ('name', models.CharField(max_length=255, null=True)),
                ('status', models.IntegerField(choices=[(1, 'Pending'), (2, 'In-Progress'), (3, 'Complete'), (4, 'Failed'), (5, 'Retrying'), (6, 'Started'), (7, 'Max Retries Failed'), (8, 'Ready For Upload'), (9, 'Upload In Progress'), (10, 'Upload Complete'), (22, 'Upload Validation'), (11, 'Upload Failed'), (12, 'Delete REQUESTED'), (13, 'Delete In-Progress'), (14, 'Delete Completed'), (15, 'Delete Failed'), (20, 'Delete Failed (Not Found)'), (16, 'Delete Max Retries Failed'), (17, 'Download In-Progress'), (18, 'Download Complete'), (19, 'Cancelled'), (21, 'Timeout'), (30, 'Storage Validation Failed')], default=3)),
                ('type', models.IntegerField(choices=[(1, 'On-Demand'), (2, 'Scheduled')], null=True)),
                ('attempt_no', models.PositiveIntegerField(null=True)),
                ('old_schedule_name', models.CharField(max_length=255, null=True)),
                ('old_schedule_timezone', models.CharField(max_length=255, null=True)),
                ('old_delete_requested', models.BooleanField(null=True)),
                ('old_delete_in_progress', models.BooleanField(default=False)),
                ('old_max_delete_retry', models.BooleanField(default=False)),
                ('completed_on_attempt_no', models.IntegerField(null=True)),
                ('notes', models.TextField(null=True)),
                ('size', models.BigIntegerField(null=True)),
                ('tables', models.JSONField(null=True)),
                ('all_tables', models.BooleanField(null=True)),
                ('all_databases', models.BooleanField(null=True)),
                ('metadata', models.JSONField(null=True)),
                ('option_postgres', models.TextField(blank=True, null=True)),
                ('option_mysql', models.TextField(blank=True, null=True)),
                ('option_mariadb', models.TextField(blank=True, null=True)),
                ('option_mongodb', models.TextField(blank=True, null=True)),
                ('database', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='backups', to='apps.coredatabase')),
                ('schedule', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='database_backups', to='apps.coreschedule')),
            ],
            options={
                'db_table': 'core_database_backup',
            },
        ),
        migrations.CreateModel(
            name='CoreBasecampBackup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('uuid', models.CharField(editable=False, max_length=1024, null=True)),
                ('celery_task_id', models.CharField(editable=False, max_length=255, null=True)),
                ('name', models.CharField(max_length=255, null=True)),
                ('status', models.IntegerField(choices=[(1, 'Pending'), (2, 'In-Progress'), (3, 'Complete'), (4, 'Failed'), (5, 'Retrying'), (6, 'Started'), (7, 'Max Retries Failed'), (8, 'Ready For Upload'), (9, 'Upload In Progress'), (10, 'Upload Complete'), (22, 'Upload Validation'), (11, 'Upload Failed'), (12, 'Delete REQUESTED'), (13, 'Delete In-Progress'), (14, 'Delete Completed'), (15, 'Delete Failed'), (20, 'Delete Failed (Not Found)'), (16, 'Delete Max Retries Failed'), (17, 'Download In-Progress'), (18, 'Download Complete'), (19, 'Cancelled'), (21, 'Timeout'), (30, 'Storage Validation Failed')], default=3)),
                ('type', models.IntegerField(choices=[(1, 'On-Demand'), (2, 'Scheduled')], null=True)),
                ('attempt_no', models.PositiveIntegerField(null=True)),
                ('old_schedule_name', models.CharField(max_length=255, null=True)),
                ('old_schedule_timezone', models.CharField(max_length=255, null=True)),
                ('old_delete_requested', models.BooleanField(null=True)),
                ('old_delete_in_progress', models.BooleanField(default=False)),
                ('old_max_delete_retry', models.BooleanField(default=False)),
                ('completed_on_attempt_no', models.IntegerField(null=True)),
                ('notes', models.TextField(null=True)),
                ('size', models.BigIntegerField(null=True)),
                ('zip_size', models.BigIntegerField(null=True)),
                ('raw_size', models.BigIntegerField(null=True)),
                ('total_files', models.BigIntegerField(null=True)),
                ('total_folders', models.BigIntegerField(null=True)),
                ('total_files_n_folders_calculated', models.BooleanField(null=True)),
                ('projects', models.JSONField(null=True)),
                ('file_list_json', models.JSONField(null=True)),
                ('file_list_path', models.JSONField(null=True)),
                ('all_paths', models.BooleanField(null=True)),
                ('unique_id', models.CharField(max_length=255, null=True)),
                ('metadata', models.JSONField(null=True)),
                ('basecamp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='backups', to='apps.corebasecamp')),
                ('schedule', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='basecamp_backups', to='apps.coreschedule')),
            ],
            options={
                'db_table': 'core_basecamp_backup',
            },
        ),
        migrations.CreateModel(
            name='CoreAWSRDSBackup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('uuid', models.CharField(editable=False, max_length=1024, null=True)),
                ('celery_task_id', models.CharField(editable=False, max_length=255, null=True)),
                ('name', models.CharField(max_length=255, null=True)),
                ('status', models.IntegerField(choices=[(1, 'Pending'), (2, 'In-Progress'), (3, 'Complete'), (4, 'Failed'), (5, 'Retrying'), (6, 'Started'), (7, 'Max Retries Failed'), (8, 'Ready For Upload'), (9, 'Upload In Progress'), (10, 'Upload Complete'), (22, 'Upload Validation'), (11, 'Upload Failed'), (12, 'Delete REQUESTED'), (13, 'Delete In-Progress'), (14, 'Delete Completed'), (15, 'Delete Failed'), (20, 'Delete Failed (Not Found)'), (16, 'Delete Max Retries Failed'), (17, 'Download In-Progress'), (18, 'Download Complete'), (19, 'Cancelled'), (21, 'Timeout'), (30, 'Storage Validation Failed')], default=3)),
                ('type', models.IntegerField(choices=[(1, 'On-Demand'), (2, 'Scheduled')], null=True)),
                ('attempt_no', models.PositiveIntegerField(null=True)),
                ('old_schedule_name', models.CharField(max_length=255, null=True)),
                ('old_schedule_timezone', models.CharField(max_length=255, null=True)),
                ('old_delete_requested', models.BooleanField(null=True)),
                ('old_delete_in_progress', models.BooleanField(default=False)),
                ('old_max_delete_retry', models.BooleanField(default=False)),
                ('completed_on_attempt_no', models.IntegerField(null=True)),
                ('notes', models.TextField(null=True)),
                ('region', models.CharField(max_length=255, null=True)),
                ('unique_id', models.CharField(max_length=64)),
                ('size_gigabytes', models.FloatField(null=True)),
                ('metadata', models.JSONField(null=True)),
                ('aws_rds', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='backups', to='apps.coreawsrds')),
                ('schedule', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='aws_rds_backups', to='apps.coreschedule')),
            ],
            options={
                'db_table': 'core_aws_rds_backup',
            },
        ),
        migrations.CreateModel(
            name='CoreAWSBackup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('uuid', models.CharField(editable=False, max_length=1024, null=True)),
                ('celery_task_id', models.CharField(editable=False, max_length=255, null=True)),
                ('name', models.CharField(max_length=255, null=True)),
                ('status', models.IntegerField(choices=[(1, 'Pending'), (2, 'In-Progress'), (3, 'Complete'), (4, 'Failed'), (5, 'Retrying'), (6, 'Started'), (7, 'Max Retries Failed'), (8, 'Ready For Upload'), (9, 'Upload In Progress'), (10, 'Upload Complete'), (22, 'Upload Validation'), (11, 'Upload Failed'), (12, 'Delete REQUESTED'), (13, 'Delete In-Progress'), (14, 'Delete Completed'), (15, 'Delete Failed'), (20, 'Delete Failed (Not Found)'), (16, 'Delete Max Retries Failed'), (17, 'Download In-Progress'), (18, 'Download Complete'), (19, 'Cancelled'), (21, 'Timeout'), (30, 'Storage Validation Failed')], default=3)),
                ('type', models.IntegerField(choices=[(1, 'On-Demand'), (2, 'Scheduled')], null=True)),
                ('attempt_no', models.PositiveIntegerField(null=True)),
                ('old_schedule_name', models.CharField(max_length=255, null=True)),
                ('old_schedule_timezone', models.CharField(max_length=255, null=True)),
                ('old_delete_requested', models.BooleanField(null=True)),
                ('old_delete_in_progress', models.BooleanField(default=False)),
                ('old_max_delete_retry', models.BooleanField(default=False)),
                ('completed_on_attempt_no', models.IntegerField(null=True)),
                ('notes', models.TextField(null=True)),
                ('region', models.CharField(max_length=255, null=True)),
                ('unique_id', models.CharField(max_length=64)),
                ('size_gigabytes', models.FloatField(null=True)),
                ('metadata', models.JSONField(null=True)),
                ('aws', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='backups', to='apps.coreaws')),
                ('schedule', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='aws_backups', to='apps.coreschedule')),
            ],
            options={
                'db_table': 'core_aws_backup',
            },
        ),
        migrations.CreateModel(
            name='CoreScheduleRun',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('request_id', models.CharField(max_length=1024)),
                ('schedule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='runs', to='apps.coreschedule')),
            ],
            options={
                'db_table': 'core_schedule_run',
            },
        ),
        migrations.CreateModel(
            name='CoreStorage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('status', models.IntegerField(choices=[(1, 'Active'), (2, 'Pending'), (3, 'Suspended'), (4, 'Paused'), (5, 'Delete Requested')], default=1)),
                ('name', models.CharField(max_length=255)),
                ('stats_website_count', models.BigIntegerField(null=True)),
                ('stats_database_count', models.BigIntegerField(null=True)),
                ('stats_wordpress_count', models.BigIntegerField(null=True)),
                ('stats_website_backup_count', models.BigIntegerField(null=True)),
                ('stats_database_backup_count', models.BigIntegerField(null=True)),
                ('stats_wordpress_backup_count', models.BigIntegerField(null=True)),
                ('stats_website_size', models.BigIntegerField(null=True)),
                ('stats_database_size', models.BigIntegerField(null=True)),
                ('stats_wordpress_size', models.BigIntegerField(null=True)),
                ('stat_wordpress_size', models.BigIntegerField(null=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='storage', to='apps.coreaccount')),
                ('added_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='added_storages', to='apps.coremember')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='storage', to='apps.corestoragetype')),
            ],
            options={
                'db_table': 'core_storage',
            },
        ),
        migrations.AddField(
            model_name='coreschedule',
            name='storage_points',
            field=models.ManyToManyField(related_name='schedules', to='apps.corestorage'),
        ),
        migrations.CreateModel(
            name='CoreDatabaseBackupStoragePoints',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('status', models.IntegerField(choices=[(1, 'Ready For Upload'), (9, 'Retrying Upload'), (2, 'Upload In Progress'), (3, 'Upload Complete'), (15, 'Upload Validation'), (4, 'Upload Failed'), (10, 'Upload Failed - Storage Limit'), (11, 'Upload Failed - File Not Found'), (14, 'Upload Failed - Time Limit Reached'), (12, 'Delete REQUESTED'), (13, 'Cancelled'), (7, 'Delete Completed'), (8, 'Delete Failed'), (30, 'Storage Validation Failed'), (40, 'Transferred')], default=1)),
                ('storage_file_id', models.CharField(max_length=255, null=True)),
                ('celery_task_id', models.CharField(max_length=255, null=True)),
                ('metadata', models.JSONField(null=True)),
                ('backup', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stored_database_backups', to='apps.coredatabasebackup')),
                ('storage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stored_database_backups', to='apps.corestorage')),
            ],
            options={
                'db_table': 'core_database_backup_mtm_storage_points',
            },
        ),
        migrations.AddField(
            model_name='coredatabasebackup',
            name='storage_points',
            field=models.ManyToManyField(related_name='database_backups', through='apps.CoreDatabaseBackupStoragePoints', to='apps.corestorage'),
        ),
        migrations.CreateModel(
            name='CoreBasecampBackupStoragePoints',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('status', models.IntegerField(choices=[(1, 'Ready For Upload'), (9, 'Retrying Upload'), (2, 'Upload In Progress'), (3, 'Upload Complete'), (13, 'Upload Validation'), (4, 'Upload Failed'), (10, 'Upload Failed - Storage Limit'), (11, 'Upload Failed - File Not Found'), (12, 'Upload Failed - Time Limit Reached'), (5, 'Delete REQUESTED'), (7, 'Delete Completed'), (8, 'Delete Failed'), (6, 'Cancelled'), (30, 'Storage Validation Failed'), (40, 'Transferred')], default=1)),
                ('storage_file_id', models.CharField(max_length=255, null=True)),
                ('celery_task_id', models.CharField(max_length=255, null=True)),
                ('metadata', models.JSONField(null=True)),
                ('backup', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stored_basecamp_backups', to='apps.corebasecampbackup')),
                ('storage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stored_basecamp_backups', to='apps.corestorage')),
            ],
            options={
                'db_table': 'core_basecamp_backup_mtm_storage_points',
            },
        ),
        migrations.AddField(
            model_name='corebasecampbackup',
            name='storage_points',
            field=models.ManyToManyField(related_name='basecamp_backups', through='apps.CoreBasecampBackupStoragePoints', to='apps.corestorage'),
        ),
        migrations.CreateModel(
            name='CoreStorageAliBaba',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('secret_key', models.BinaryField()),
                ('access_key', models.BinaryField()),
                ('bucket_name', models.CharField(max_length=1024)),
                ('prefix', models.CharField(blank=True, max_length=255, null=True)),
                ('no_delete', models.BooleanField(null=True)),
                ('encryption_updated', models.BooleanField(default=False)),
                ('region', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='storage_alibaba', to='apps.corealibabaregion')),
                ('storage', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='storage_alibaba', to='apps.corestorage')),
            ],
            options={
                'db_table': 'core_storage_alibaba',
            },
        ),
        migrations.CreateModel(
            name='CoreStorageAWSS3',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('secret_key', models.BinaryField(null=True)),
                ('access_key', models.BinaryField(null=True)),
                ('bucket_name', models.CharField(max_length=1024)),
                ('prefix', models.CharField(blank=True, max_length=255, null=True)),
                ('no_delete', models.BooleanField(null=True)),
                ('encryption_updated', models.BooleanField(default=False)),
                ('region', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='storage_aws_s3', to='apps.coreawsregion')),
                ('storage', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='storage_aws_s3', to='apps.corestorage')),
            ],
            options={
                'db_table': 'core_storage_aws_s3',
            },
        ),
        migrations.CreateModel(
            name='CoreStorageAzure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('connection_string', models.BinaryField()),
                ('bucket_name', models.CharField(max_length=1024)),
                ('prefix', models.CharField(blank=True, max_length=255, null=True)),
                ('no_delete', models.BooleanField(null=True)),
                ('encryption_updated', models.BooleanField(default=False)),
                ('storage', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='storage_azure', to='apps.corestorage')),
            ],
            options={
                'db_table': 'core_storage_azure',
            },
        ),
        migrations.CreateModel(
            name='CoreStorageBackBlazeB2',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('secret_key', models.BinaryField()),
                ('access_key', models.BinaryField()),
                ('bucket_name', models.CharField(max_length=1024)),
                ('prefix', models.CharField(blank=True, max_length=255, null=True)),
                ('endpoint', models.CharField(max_length=255)),
                ('no_delete', models.BooleanField(null=True)),
                ('encryption_updated', models.BooleanField(default=False)),
                ('storage', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='storage_backblaze_b2', to='apps.corestorage')),
            ],
            options={
                'db_table': 'core_storage_backblaze_b2',
            },
        ),
        migrations.CreateModel(
            name='CoreStorageCloudflare',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('secret_key', models.BinaryField()),
                ('access_key', models.BinaryField()),
                ('account_id', models.CharField(max_length=1024)),
                ('bucket_name', models.CharField(max_length=1024)),
                ('prefix', models.CharField(blank=True, max_length=255, null=True)),
                ('no_delete', models.BooleanField(null=True)),
                ('encryption_updated', models.BooleanField(default=False)),
                ('storage', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='storage_cloudflare', to='apps.corestorage')),
            ],
            options={
                'db_table': 'core_storage_cloudflare',
            },
        ),
        migrations.CreateModel(
            name='CoreStorageDoSpaces',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('secret_key', models.BinaryField(null=True)),
                ('access_key', models.BinaryField(null=True)),
                ('bucket_name', models.CharField(max_length=1024)),
                ('prefix', models.CharField(blank=True, max_length=255, null=True)),
                ('no_delete', models.BooleanField(null=True)),
                ('encryption_updated', models.BooleanField(default=False)),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='storage_do_spaces', to='apps.coredospacesregion')),
                ('storage', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='storage_do_spaces', to='apps.corestorage')),
            ],
            options={
                'db_table': 'core_storage_do_spaces',
            },
        ),
        migrations.CreateModel(
            name='CoreStorageDropbox',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('access_token', models.BinaryField(null=True)),
                ('refresh_token', models.BinaryField(null=True)),
                ('expiry', models.DateTimeField(null=True)),
                ('token_type', models.CharField(max_length=255)),
                ('account_id', models.CharField(max_length=255, null=True)),
                ('team_id', models.CharField(max_length=255, null=True)),
                ('uid', models.CharField(max_length=255, null=True)),
                ('no_delete', models.BooleanField(null=True)),
                ('encryption_updated', models.BooleanField(default=False)),
                ('storage', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='storage_dropbox', to='apps.corestorage')),
            ],
            options={
                'db_table': 'core_storage_dropbox',
            },
        ),
        migrations.CreateModel(
            name='CoreStorageExoscale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('secret_key', models.BinaryField(null=True)),
                ('access_key', models.BinaryField(null=True)),
                ('bucket_name', models.CharField(max_length=1024)),
                ('prefix', models.CharField(blank=True, max_length=255, null=True)),
                ('no_delete', models.BooleanField(null=True)),
                ('encryption_updated', models.BooleanField(default=False)),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='storage_exoscale', to='apps.coreexoscaleregion')),
                ('storage', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='storage_exoscale', to='apps.corestorage')),
            ],
            options={
                'db_table': 'core_storage_exoscale',
            },
        ),
        migrations.CreateModel(
            name='CoreStorageFilebase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('secret_key', models.BinaryField(null=True)),
                ('access_key', models.BinaryField(null=True)),
                ('bucket_name', models.CharField(max_length=1024)),
                ('prefix', models.CharField(blank=True, max_length=255, null=True)),
                ('no_delete', models.BooleanField(null=True)),
                ('encryption_updated', models.BooleanField(default=False)),
                ('region', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='storage_filebase', to='apps.corefilebaseregion')),
                ('storage', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='storage_filebase', to='apps.corestorage')),
            ],
            options={
                'db_table': 'core_storage_filebase',
            },
        ),
        migrations.CreateModel(
            name='CoreStorageGoogleCloud',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('service_key', models.BinaryField()),
                ('bucket_name', models.CharField(max_length=1024)),
                ('prefix', models.CharField(blank=True, max_length=255, null=True)),
                ('no_delete', models.BooleanField(null=True)),
                ('encryption_updated', models.BooleanField(default=False)),
                ('access_token', models.BinaryField(null=True)),
                ('refresh_token', models.BinaryField(null=True)),
                ('email_address', models.CharField(max_length=255, null=True)),
                ('display_name', models.CharField(max_length=255, null=True)),
                ('storage', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='storage_google_cloud', to='apps.corestorage')),
            ],
            options={
                'db_table': 'core_storage_google_cloud',
            },
        ),
        migrations.CreateModel(
            name='CoreStorageGoogleDrive',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('access_token', models.BinaryField(null=True)),
                ('refresh_token', models.BinaryField(null=True)),
                ('expiry', models.DateTimeField(null=True)),
                ('email_address', models.CharField(max_length=255)),
                ('display_name', models.CharField(max_length=255, null=True)),
                ('created_at', models.BigIntegerField(null=True)),
                ('modified', models.BigIntegerField(null=True)),
                ('no_delete', models.BooleanField(null=True)),
                ('encryption_updated', models.BooleanField(default=False)),
                ('storage', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='storage_google_drive', to='apps.corestorage')),
            ],
            options={
                'db_table': 'core_storage_google_drive',
            },
        ),
        migrations.CreateModel(
            name='CoreStorageIBM',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('secret_key', models.BinaryField()),
                ('access_key', models.BinaryField()),
                ('bucket_name', models.CharField(max_length=1024)),
                ('prefix', models.CharField(blank=True, max_length=255, null=True)),
                ('no_delete', models.BooleanField(null=True)),
                ('encryption_updated', models.BooleanField(default=False)),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='storage_ibm', to='apps.coreibmregion')),
                ('storage', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='storage_ibm', to='apps.corestorage')),
            ],
            options={
                'db_table': 'core_storage_ibm',
            },
        ),
        migrations.CreateModel(
            name='CoreStorageIDrive',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('secret_key', models.BinaryField()),
                ('access_key', models.BinaryField()),
                ('endpoint', models.CharField(max_length=1024)),
                ('bucket_name', models.CharField(max_length=1024)),
                ('prefix', models.CharField(blank=True, max_length=255, null=True)),
                ('no_delete', models.BooleanField(null=True)),
                ('encryption_updated', models.BooleanField(default=False)),
                ('storage', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='storage_idrive', to='apps.corestorage')),
            ],
            options={
                'db_table': 'core_storage_idrive',
            },
        ),
        migrations.CreateModel(
            name='CoreStorageIonos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('secret_key', models.BinaryField()),
                ('access_key', models.BinaryField()),
                ('bucket_name', models.CharField(max_length=1024)),
                ('prefix', models.CharField(blank=True, max_length=255, null=True)),
                ('no_delete', models.BooleanField(null=True)),
                ('encryption_updated', models.BooleanField(default=False)),
                ('region', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='storage_ionos', to='apps.coreionosregion')),
                ('storage', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='storage_ionos', to='apps.corestorage')),
            ],
            options={
                'db_table': 'core_storage_ionos',
            },
        ),
        migrations.CreateModel(
            name='CoreStorageLeviia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('secret_key', models.BinaryField()),
                ('access_key', models.BinaryField()),
                ('bucket_name', models.CharField(max_length=1024)),
                ('prefix', models.CharField(blank=True, max_length=255, null=True)),
                ('no_delete', models.BooleanField(null=True)),
                ('encryption_updated', models.BooleanField(default=False)),
                ('storage', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='storage_leviia', to='apps.corestorage')),
            ],
            options={
                'db_table': 'core_storage_leviia',
            },
        ),
        migrations.CreateModel(
            name='CoreStorageLinode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('secret_key', models.BinaryField()),
                ('access_key', models.BinaryField()),
                ('bucket_name', models.CharField(max_length=1024)),
                ('prefix', models.CharField(blank=True, max_length=255, null=True)),
                ('endpoint', models.CharField(max_length=255)),
                ('no_delete', models.BooleanField(null=True)),
                ('encryption_updated', models.BooleanField(default=False)),
                ('storage', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='storage_linode', to='apps.corestorage')),
            ],
            options={
                'db_table': 'core_storage_linode',
            },
        ),
        migrations.CreateModel(
            name='CoreStorageOneDrive',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('access_token', models.BinaryField(null=True)),
                ('refresh_token', models.BinaryField(null=True)),
                ('expiry', models.DateTimeField(null=True)),
                ('token_type', models.CharField(max_length=255)),
                ('scope', models.CharField(max_length=255)),
                ('user_id', models.CharField(max_length=255, null=True)),
                ('drive_id', models.CharField(max_length=255, null=True)),
                ('drive_type', models.CharField(max_length=255, null=True)),
                ('metadata', models.JSONField(null=True)),
                ('storage', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='storage_onedrive', to='apps.corestorage')),
            ],
            options={
                'db_table': 'core_storage_onedrive',
            },
        ),
        migrations.CreateModel(
            name='CoreStorageOracle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('secret_key', models.BinaryField()),
                ('access_key', models.BinaryField()),
                ('bucket_name', models.CharField(max_length=1024)),
                ('namespace', models.CharField(max_length=255)),
                ('prefix', models.CharField(blank=True, max_length=255, null=True)),
                ('no_delete', models.BooleanField(null=True)),
                ('encryption_updated', models.BooleanField(default=False)),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='storage_oracle', to='apps.coreoracleregion')),
                ('storage', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='storage_oracle', to='apps.corestorage')),
            ],
            options={
                'db_table': 'core_storage_oracle',
            },
        ),
        migrations.CreateModel(
            name='CoreStoragePCloud',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('access_token', models.BinaryField(null=True)),
                ('token_type', models.CharField(max_length=255)),
                ('userid', models.CharField(max_length=255, null=True)),
                ('location', models.IntegerField(choices=[(1, 'US'), (2, 'EUROPE')], null=True)),
                ('hostname', models.CharField(max_length=255, null=True)),
                ('storage', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='storage_pcloud', to='apps.corestorage')),
            ],
            options={
                'db_table': 'core_storage_pcloud',
            },
        ),
        migrations.CreateModel(
            name='CoreStorageRackCorp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('secret_key', models.BinaryField()),
                ('access_key', models.BinaryField()),
                ('bucket_name', models.CharField(max_length=1024)),
                ('prefix', models.CharField(blank=True, max_length=255, null=True)),
                ('no_delete', models.BooleanField(null=True)),
                ('encryption_updated', models.BooleanField(default=False)),
                ('region', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='storage_rackcorp', to='apps.corerackcorpregion')),
                ('storage', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='storage_rackcorp', to='apps.corestorage')),
            ],
            options={
                'db_table': 'core_storage_rackcorp',
            },
        ),
        migrations.CreateModel(
            name='CoreStorageScaleway',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('secret_key', models.BinaryField()),
                ('access_key', models.BinaryField()),
                ('bucket_name', models.CharField(max_length=1024)),
                ('prefix', models.CharField(blank=True, max_length=255, null=True)),
                ('no_delete', models.BooleanField(null=True)),
                ('encryption_updated', models.BooleanField(default=False)),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='storage_scaleway', to='apps.corescalewayregion')),
                ('storage', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='storage_scaleway', to='apps.corestorage')),
            ],
            options={
                'db_table': 'core_storage_scaleway',
            },
        ),
        migrations.CreateModel(
            name='CoreStorageUpCloud',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('secret_key', models.BinaryField()),
                ('access_key', models.BinaryField()),
                ('bucket_name', models.CharField(max_length=1024)),
                ('prefix', models.CharField(blank=True, max_length=255, null=True)),
                ('endpoint', models.CharField(max_length=255)),
                ('no_delete', models.BooleanField(null=True)),
                ('encryption_updated', models.BooleanField(default=False)),
                ('storage', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='storage_upcloud', to='apps.corestorage')),
            ],
            options={
                'db_table': 'core_storage_upcloud',
            },
        ),
        migrations.CreateModel(
            name='CoreStorageVultr',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('secret_key', models.BinaryField()),
                ('access_key', models.BinaryField()),
                ('bucket_name', models.CharField(max_length=1024)),
                ('prefix', models.CharField(blank=True, max_length=255, null=True)),
                ('endpoint', models.CharField(max_length=255)),
                ('no_delete', models.BooleanField(null=True)),
                ('encryption_updated', models.BooleanField(default=False)),
                ('storage', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='storage_vultr', to='apps.corestorage')),
            ],
            options={
                'db_table': 'core_storage_vultr',
            },
        ),
        migrations.CreateModel(
            name='CoreStorageTencent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('secret_key', models.BinaryField()),
                ('access_key', models.BinaryField()),
                ('bucket_name', models.CharField(max_length=1024)),
                ('prefix', models.CharField(blank=True, max_length=255, null=True)),
                ('no_delete', models.BooleanField(null=True)),
                ('encryption_updated', models.BooleanField(default=False)),
                ('storage', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='storage_tencent', to='apps.corestorage')),
                ('region', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='storage_tencent', to='apps.coretencentregion')),
            ],
            options={
                'db_table': 'core_storage_tencent',
            },
        ),
        migrations.CreateModel(
            name='CoreUpCloud',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('name', models.CharField(max_length=255)),
                ('unique_id', models.CharField(max_length=255)),
                ('notes', models.TextField(blank=True, null=True)),
                ('metadata', models.JSONField(null=True)),
                ('node', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='upcloud', to='apps.corenode')),
            ],
            options={
                'db_table': 'core_upcloud',
            },
        ),
        migrations.CreateModel(
            name='CoreUpCloudBackup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('uuid', models.CharField(editable=False, max_length=1024, null=True)),
                ('celery_task_id', models.CharField(editable=False, max_length=255, null=True)),
                ('name', models.CharField(max_length=255, null=True)),
                ('status', models.IntegerField(choices=[(1, 'Pending'), (2, 'In-Progress'), (3, 'Complete'), (4, 'Failed'), (5, 'Retrying'), (6, 'Started'), (7, 'Max Retries Failed'), (8, 'Ready For Upload'), (9, 'Upload In Progress'), (10, 'Upload Complete'), (22, 'Upload Validation'), (11, 'Upload Failed'), (12, 'Delete REQUESTED'), (13, 'Delete In-Progress'), (14, 'Delete Completed'), (15, 'Delete Failed'), (20, 'Delete Failed (Not Found)'), (16, 'Delete Max Retries Failed'), (17, 'Download In-Progress'), (18, 'Download Complete'), (19, 'Cancelled'), (21, 'Timeout'), (30, 'Storage Validation Failed')], default=3)),
                ('type', models.IntegerField(choices=[(1, 'On-Demand'), (2, 'Scheduled')], null=True)),
                ('attempt_no', models.PositiveIntegerField(null=True)),
                ('old_schedule_name', models.CharField(max_length=255, null=True)),
                ('old_schedule_timezone', models.CharField(max_length=255, null=True)),
                ('old_delete_requested', models.BooleanField(null=True)),
                ('old_delete_in_progress', models.BooleanField(default=False)),
                ('old_max_delete_retry', models.BooleanField(default=False)),
                ('completed_on_attempt_no', models.IntegerField(null=True)),
                ('notes', models.TextField(null=True)),
                ('unique_id', models.CharField(max_length=255, null=True)),
                ('size_gigabytes', models.FloatField(null=True)),
                ('metadata', models.JSONField(null=True)),
                ('schedule', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='upcloud_backups', to='apps.coreschedule')),
                ('upcloud', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='backups', to='apps.coreupcloud')),
            ],
            options={
                'db_table': 'core_upcloud_backup',
            },
        ),
        migrations.CreateModel(
            name='CoreUsageBackup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('total_backups', models.BigIntegerField(null=True)),
                ('cloud_backups', models.BigIntegerField(null=True)),
                ('cloud_storage', models.BigIntegerField(null=True)),
                ('volume_backups', models.BigIntegerField(null=True)),
                ('volume_storage', models.BigIntegerField(null=True)),
                ('website_backups', models.BigIntegerField(null=True)),
                ('website_storage', models.BigIntegerField(null=True)),
                ('database_backups', models.BigIntegerField(null=True)),
                ('database_storage', models.BigIntegerField(null=True)),
                ('saas_backups', models.BigIntegerField(null=True)),
                ('saas_storage', models.BigIntegerField(null=True)),
                ('digitalocean_snapshot_count', models.BigIntegerField(null=True)),
                ('digitalocean_snapshot_storage', models.BigIntegerField(null=True)),
                ('hetzner_snapshot_count', models.BigIntegerField(null=True)),
                ('hetzner_snapshot_storage', models.BigIntegerField(null=True)),
                ('upcloud_snapshot_count', models.BigIntegerField(null=True)),
                ('upcloud_snapshot_storage', models.BigIntegerField(null=True)),
                ('ovh_ca_snapshot_count', models.BigIntegerField(null=True)),
                ('ovh_ca_snapshot_storage', models.BigIntegerField(null=True)),
                ('ovh_eu_snapshot_count', models.BigIntegerField(null=True)),
                ('ovh_eu_snapshot_storage', models.BigIntegerField(null=True)),
                ('ovh_us_snapshot_count', models.BigIntegerField(null=True)),
                ('ovh_us_snapshot_storage', models.BigIntegerField(null=True)),
                ('aws_snapshot_count', models.BigIntegerField(null=True)),
                ('aws_snapshot_storage', models.BigIntegerField(null=True)),
                ('lightsail_snapshot_count', models.BigIntegerField(null=True)),
                ('lightsail_snapshot_storage', models.BigIntegerField(null=True)),
                ('aws_rds_snapshot_count', models.BigIntegerField(null=True)),
                ('aws_rds_snapshot_storage', models.BigIntegerField(null=True)),
                ('vultr_snapshot_count', models.BigIntegerField(null=True)),
                ('vultr_snapshot_storage', models.BigIntegerField(null=True)),
                ('oracle_snapshot_count', models.BigIntegerField(null=True)),
                ('oracle_snapshot_storage', models.BigIntegerField(null=True)),
                ('linode_snapshot_count', models.BigIntegerField(null=True)),
                ('linode_snapshot_storage', models.BigIntegerField(null=True)),
                ('google_cloud_snapshot_count', models.BigIntegerField(null=True)),
                ('google_cloud_snapshot_storage', models.BigIntegerField(null=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usage_backup', to='apps.coreaccount')),
            ],
            options={
                'db_table': 'core_usage_backup',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='CoreUsageNode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('node_used_all', models.BigIntegerField(null=True)),
                ('plan_node_quota', models.BigIntegerField(null=True)),
                ('plan_node_overage', models.BigIntegerField(null=True)),
                ('email_alert_sent', models.BooleanField(null=True)),
                ('cloud_nodes', models.BigIntegerField(null=True)),
                ('volume_nodes', models.BigIntegerField(null=True)),
                ('website_nodes', models.BigIntegerField(null=True)),
                ('database_nodes', models.BigIntegerField(null=True)),
                ('saas_nodes', models.BigIntegerField(null=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usage_node', to='apps.coreaccount')),
            ],
            options={
                'db_table': 'core_usage_node',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='CoreUsageStorage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('plan_storage_quota', models.BigIntegerField(null=True)),
                ('plan_storage_overage', models.BigIntegerField(null=True)),
                ('storage_used_all', models.BigIntegerField(null=True)),
                ('storage_used_bs', models.BigIntegerField(null=True)),
                ('storage_used_byo', models.BigIntegerField(null=True)),
                ('email_alert_sent', models.BooleanField(null=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usage_storage', to='apps.coreaccount')),
            ],
            options={
                'db_table': 'core_usage_storage',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='CoreVultr',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('name', models.CharField(max_length=255)),
                ('unique_id', models.CharField(max_length=255)),
                ('notes', models.TextField(blank=True, null=True)),
                ('metadata', models.JSONField(null=True)),
                ('node', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='vultr', to='apps.corenode')),
            ],
            options={
                'db_table': 'core_vultr',
            },
        ),
        migrations.CreateModel(
            name='CoreVultrBackup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('uuid', models.CharField(editable=False, max_length=1024, null=True)),
                ('celery_task_id', models.CharField(editable=False, max_length=255, null=True)),
                ('name', models.CharField(max_length=255, null=True)),
                ('status', models.IntegerField(choices=[(1, 'Pending'), (2, 'In-Progress'), (3, 'Complete'), (4, 'Failed'), (5, 'Retrying'), (6, 'Started'), (7, 'Max Retries Failed'), (8, 'Ready For Upload'), (9, 'Upload In Progress'), (10, 'Upload Complete'), (22, 'Upload Validation'), (11, 'Upload Failed'), (12, 'Delete REQUESTED'), (13, 'Delete In-Progress'), (14, 'Delete Completed'), (15, 'Delete Failed'), (20, 'Delete Failed (Not Found)'), (16, 'Delete Max Retries Failed'), (17, 'Download In-Progress'), (18, 'Download Complete'), (19, 'Cancelled'), (21, 'Timeout'), (30, 'Storage Validation Failed')], default=3)),
                ('type', models.IntegerField(choices=[(1, 'On-Demand'), (2, 'Scheduled')], null=True)),
                ('attempt_no', models.PositiveIntegerField(null=True)),
                ('old_schedule_name', models.CharField(max_length=255, null=True)),
                ('old_schedule_timezone', models.CharField(max_length=255, null=True)),
                ('old_delete_requested', models.BooleanField(null=True)),
                ('old_delete_in_progress', models.BooleanField(default=False)),
                ('old_max_delete_retry', models.BooleanField(default=False)),
                ('completed_on_attempt_no', models.IntegerField(null=True)),
                ('notes', models.TextField(null=True)),
                ('unique_id', models.CharField(max_length=64)),
                ('size_gigabytes', models.FloatField(null=True)),
                ('metadata', models.JSONField(null=True)),
                ('schedule', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vultr_backups', to='apps.coreschedule')),
                ('vultr', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='backups', to='apps.corevultr')),
            ],
            options={
                'db_table': 'core_vultr_backup',
            },
        ),
        migrations.CreateModel(
            name='CoreStorageWasabi',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('secret_key', models.BinaryField(null=True)),
                ('access_key', models.BinaryField(null=True)),
                ('bucket_name', models.CharField(max_length=1024)),
                ('prefix', models.CharField(blank=True, max_length=255, null=True)),
                ('no_delete', models.BooleanField(null=True)),
                ('encryption_updated', models.BooleanField(default=False)),
                ('storage', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='storage_wasabi', to='apps.corestorage')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='storage_wasabi', to='apps.corewasabiregion')),
            ],
            options={
                'db_table': 'core_storage_wasabi',
            },
        ),
        migrations.CreateModel(
            name='CoreWebsite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('name', models.CharField(max_length=255)),
                ('paths', models.JSONField(null=True)),
                ('excludes', models.JSONField(null=True)),
                ('includes_regex', models.JSONField(null=True)),
                ('includes_glob', models.JSONField(null=True)),
                ('excludes_regex', models.JSONField(null=True)),
                ('excludes_glob', models.JSONField(null=True)),
                ('parallel', models.IntegerField(default=3, null=True)),
                ('verbose', models.BooleanField(default=False, null=True)),
                ('all_paths', models.BooleanField(null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('backup_type', models.IntegerField(choices=[(1, 'Full v1'), (2, 'Incremental'), (3, 'Differential'), (4, 'Full v2')], default=1)),
                ('tar_temp_backup_dir', models.TextField(blank=True, null=True)),
                ('tar_exclude_vcs_ignores', models.BooleanField(default=False, null=True)),
                ('tar_exclude_vcs', models.BooleanField(default=False, null=True)),
                ('tar_exclude_backups', models.BooleanField(default=False, null=True)),
                ('tar_exclude_caches', models.BooleanField(default=False, null=True)),
                ('node', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='website', to='apps.corenode')),
            ],
            options={
                'db_table': 'core_website',
            },
        ),
        migrations.CreateModel(
            name='CoreWebsiteBackup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('uuid', models.CharField(editable=False, max_length=1024, null=True)),
                ('celery_task_id', models.CharField(editable=False, max_length=255, null=True)),
                ('name', models.CharField(max_length=255, null=True)),
                ('status', models.IntegerField(choices=[(1, 'Pending'), (2, 'In-Progress'), (3, 'Complete'), (4, 'Failed'), (5, 'Retrying'), (6, 'Started'), (7, 'Max Retries Failed'), (8, 'Ready For Upload'), (9, 'Upload In Progress'), (10, 'Upload Complete'), (22, 'Upload Validation'), (11, 'Upload Failed'), (12, 'Delete REQUESTED'), (13, 'Delete In-Progress'), (14, 'Delete Completed'), (15, 'Delete Failed'), (20, 'Delete Failed (Not Found)'), (16, 'Delete Max Retries Failed'), (17, 'Download In-Progress'), (18, 'Download Complete'), (19, 'Cancelled'), (21, 'Timeout'), (30, 'Storage Validation Failed')], default=3)),
                ('type', models.IntegerField(choices=[(1, 'On-Demand'), (2, 'Scheduled')], null=True)),
                ('attempt_no', models.PositiveIntegerField(null=True)),
                ('old_schedule_name', models.CharField(max_length=255, null=True)),
                ('old_schedule_timezone', models.CharField(max_length=255, null=True)),
                ('old_delete_requested', models.BooleanField(null=True)),
                ('old_delete_in_progress', models.BooleanField(default=False)),
                ('old_max_delete_retry', models.BooleanField(default=False)),
                ('completed_on_attempt_no', models.IntegerField(null=True)),
                ('notes', models.TextField(null=True)),
                ('size', models.BigIntegerField(null=True)),
                ('zip_size', models.BigIntegerField(null=True)),
                ('raw_size', models.BigIntegerField(null=True)),
                ('total_files', models.BigIntegerField(null=True)),
                ('total_folders', models.BigIntegerField(null=True)),
                ('total_files_n_folders_calculated', models.BooleanField(null=True)),
                ('excludes', models.JSONField(null=True)),
                ('paths', models.JSONField(null=True)),
                ('file_list_json', models.JSONField(null=True)),
                ('file_list_path', models.JSONField(null=True)),
                ('all_paths', models.BooleanField(null=True)),
                ('unzip_request', model_utils.fields.StatusField(choices=[('requested', 'requested'), ('in_progress', 'in_progress'), ('available', 'available'), ('disable', 'disable')], default=None, max_length=100, no_check_for_status=True, null=True)),
                ('unzip_sftp_time', models.BigIntegerField(null=True)),
                ('unzip_sftp_docker', models.CharField(max_length=2048, null=True)),
                ('unzip_sftp_user', models.CharField(max_length=2048, null=True)),
                ('unzip_sftp_pass', models.CharField(max_length=2048, null=True)),
                ('unzip_sftp_host', models.CharField(max_length=2048, null=True)),
                ('unzip_sftp_port', models.IntegerField(null=True)),
                ('unique_id', models.CharField(max_length=255, null=True)),
                ('metadata', models.JSONField(null=True)),
                ('schedule', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='website_backups', to='apps.coreschedule')),
                ('website', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='backups', to='apps.corewebsite')),
            ],
            options={
                'db_table': 'core_website_backup',
            },
        ),
        migrations.CreateModel(
            name='CoreWebsiteBackupFiles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('md5_hash', models.TextField()),
                ('path', models.TextField()),
                ('backup', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='apps.corewebsitebackup')),
            ],
            options={
                'db_table': 'core_website_backup_file',
            },
        ),
        migrations.CreateModel(
            name='CoreWebsiteBackupStoragePoints',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('status', models.IntegerField(choices=[(1, 'Ready For Upload'), (9, 'Retrying Upload'), (2, 'Upload In Progress'), (3, 'Upload Complete'), (13, 'Upload Validation'), (4, 'Upload Failed'), (10, 'Upload Failed - Storage Limit'), (11, 'Upload Failed - File Not Found'), (12, 'Upload Failed - Time Limit Reached'), (5, 'Delete REQUESTED'), (7, 'Delete Completed'), (8, 'Delete Failed'), (6, 'Cancelled'), (30, 'Storage Validation Failed'), (40, 'Transferred')], default=1)),
                ('storage_file_id', models.CharField(max_length=255, null=True)),
                ('celery_task_id', models.CharField(max_length=255, null=True)),
                ('metadata', models.JSONField(null=True)),
                ('backup', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stored_website_backups', to='apps.corewebsitebackup')),
                ('storage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stored_website_backups', to='apps.corestorage')),
            ],
            options={
                'db_table': 'core_website_backup_mtm_storage_points',
            },
        ),
        migrations.AddField(
            model_name='corewebsitebackup',
            name='storage_points',
            field=models.ManyToManyField(related_name='website_backups', through='apps.CoreWebsiteBackupStoragePoints', to='apps.corestorage'),
        ),
        migrations.CreateModel(
            name='CoreWordPress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('include', models.IntegerField(choices=[(1, 'Full (Database + Files)'), (2, 'Only Database'), (3, 'Only Files')], default=1)),
                ('name', models.CharField(max_length=255)),
                ('notes', models.TextField(blank=True, null=True)),
                ('node', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='wordpress', to='apps.corenode')),
            ],
            options={
                'db_table': 'core_wordpress',
            },
        ),
        migrations.CreateModel(
            name='CoreWordPressBackup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('uuid', models.CharField(editable=False, max_length=1024, null=True)),
                ('celery_task_id', models.CharField(editable=False, max_length=255, null=True)),
                ('name', models.CharField(max_length=255, null=True)),
                ('status', models.IntegerField(choices=[(1, 'Pending'), (2, 'In-Progress'), (3, 'Complete'), (4, 'Failed'), (5, 'Retrying'), (6, 'Started'), (7, 'Max Retries Failed'), (8, 'Ready For Upload'), (9, 'Upload In Progress'), (10, 'Upload Complete'), (22, 'Upload Validation'), (11, 'Upload Failed'), (12, 'Delete REQUESTED'), (13, 'Delete In-Progress'), (14, 'Delete Completed'), (15, 'Delete Failed'), (20, 'Delete Failed (Not Found)'), (16, 'Delete Max Retries Failed'), (17, 'Download In-Progress'), (18, 'Download Complete'), (19, 'Cancelled'), (21, 'Timeout'), (30, 'Storage Validation Failed')], default=3)),
                ('type', models.IntegerField(choices=[(1, 'On-Demand'), (2, 'Scheduled')], null=True)),
                ('attempt_no', models.PositiveIntegerField(null=True)),
                ('old_schedule_name', models.CharField(max_length=255, null=True)),
                ('old_schedule_timezone', models.CharField(max_length=255, null=True)),
                ('old_delete_requested', models.BooleanField(null=True)),
                ('old_delete_in_progress', models.BooleanField(default=False)),
                ('old_max_delete_retry', models.BooleanField(default=False)),
                ('completed_on_attempt_no', models.IntegerField(null=True)),
                ('notes', models.TextField(null=True)),
                ('size', models.BigIntegerField(null=True)),
                ('zip_size', models.BigIntegerField(null=True)),
                ('raw_size', models.BigIntegerField(null=True)),
                ('total_files', models.BigIntegerField(null=True)),
                ('total_folders', models.BigIntegerField(null=True)),
                ('total_files_n_folders_calculated', models.BooleanField(null=True)),
                ('excludes', models.JSONField(null=True)),
                ('paths', models.JSONField(null=True)),
                ('file_list_json', models.JSONField(null=True)),
                ('file_list_path', models.JSONField(null=True)),
                ('all_paths', models.BooleanField(null=True)),
                ('unzip_request', model_utils.fields.StatusField(choices=[('requested', 'requested'), ('in_progress', 'in_progress'), ('available', 'available'), ('disable', 'disable')], default=None, max_length=100, no_check_for_status=True, null=True)),
                ('unzip_sftp_time', models.BigIntegerField(null=True)),
                ('unzip_sftp_docker', models.CharField(max_length=2048, null=True)),
                ('unzip_sftp_user', models.CharField(max_length=2048, null=True)),
                ('unzip_sftp_pass', models.CharField(max_length=2048, null=True)),
                ('unzip_sftp_host', models.CharField(max_length=2048, null=True)),
                ('unzip_sftp_port', models.IntegerField(null=True)),
                ('unique_id', models.CharField(max_length=255, null=True)),
                ('metadata', models.JSONField(null=True)),
                ('schedule', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='wordpress_backups', to='apps.coreschedule')),
                ('wordpress', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='backups', to='apps.corewordpress')),
            ],
            options={
                'db_table': 'core_wordpress_backup',
            },
        ),
        migrations.CreateModel(
            name='CoreWordPressBackupStoragePoints',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('status', models.IntegerField(choices=[(1, 'Ready For Upload'), (9, 'Retrying Upload'), (2, 'Upload In Progress'), (3, 'Upload Complete'), (13, 'Upload Validation'), (4, 'Upload Failed'), (10, 'Upload Failed - Storage Limit'), (11, 'Upload Failed - File Not Found'), (12, 'Upload Failed - Time Limit Reached'), (5, 'Delete REQUESTED'), (7, 'Delete Completed'), (8, 'Delete Failed'), (6, 'Cancelled'), (30, 'Storage Validation Failed'), (40, 'Transferred')], default=1)),
                ('storage_file_id', models.CharField(max_length=255, null=True)),
                ('celery_task_id', models.CharField(max_length=255, null=True)),
                ('metadata', models.JSONField(null=True)),
                ('backup', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stored_wordpress_backups', to='apps.corewordpressbackup')),
                ('storage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stored_wordpress_backups', to='apps.corestorage')),
            ],
            options={
                'db_table': 'core_wordpress_backup_mtm_storage_points',
            },
        ),
        migrations.AddField(
            model_name='corewordpressbackup',
            name='storage_points',
            field=models.ManyToManyField(related_name='wordpress_backups', through='apps.CoreWordPressBackupStoragePoints', to='apps.corestorage'),
        ),
        migrations.CreateModel(
            name='UtilAppSumoCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('code', models.CharField(max_length=64)),
                ('status', models.IntegerField(choices=[(1, 'Active'), (2, 'Refunded')], default=1)),
                ('account', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='appsumo_codes', to='apps.coreaccount')),
            ],
            options={
                'db_table': 'util_appsumo_code',
            },
        ),
        migrations.CreateModel(
            name='UtilTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tags', to='apps.coreaccount')),
            ],
            options={
                'db_table': 'util_tag',
            },
        ),
        migrations.AddConstraint(
            model_name='corememberaccount',
            constraint=models.UniqueConstraint(fields=('member', 'account'), name='unique_membership'),
        ),
        migrations.AddConstraint(
            model_name='corememberaccount',
            constraint=models.UniqueConstraint(condition=models.Q(('current', True)), fields=('member',), name='unique_member_current_account'),
        ),
        migrations.AddConstraint(
            model_name='corememberaccount',
            constraint=models.UniqueConstraint(condition=models.Q(('primary', True)), fields=('member',), name='unique_member_primary_account'),
        ),
        migrations.AddConstraint(
            model_name='coreaccountgroup',
            constraint=models.UniqueConstraint(fields=('account', 'name', 'type'), name='unique_name_type_enrollment'),
        ),
        migrations.AddConstraint(
            model_name='coreaccountgroup',
            constraint=models.UniqueConstraint(fields=('account', 'group'), name='unique_group_enrollment'),
        ),
        migrations.AddConstraint(
            model_name='coreaccountgroup',
            constraint=models.UniqueConstraint(condition=models.Q(('default', True)), fields=('account',), name='unique_account_default_enrollment'),
        ),
        migrations.AddConstraint(
            model_name='coreschedulerun',
            constraint=models.UniqueConstraint(fields=('schedule', 'request_id'), name='unique_schedule_trigger_request'),
        ),
        migrations.AddConstraint(
            model_name='coredatabasebackupstoragepoints',
            constraint=models.UniqueConstraint(fields=('backup', 'storage', 'status'), name='unique_stored_database_backups'),
        ),
        migrations.AddConstraint(
            model_name='corebasecampbackupstoragepoints',
            constraint=models.UniqueConstraint(fields=('backup', 'storage', 'status'), name='unique_stored_basecamp_backups'),
        ),
        migrations.AddConstraint(
            model_name='corewebsitebackupstoragepoints',
            constraint=models.UniqueConstraint(fields=('backup', 'storage', 'status'), name='unique_stored_website_backups'),
        ),
        migrations.AddConstraint(
            model_name='corewordpressbackupstoragepoints',
            constraint=models.UniqueConstraint(fields=('backup', 'storage', 'status'), name='unique_stored_wordpress_backups'),
        ),
    ]
